{"version":3,"sources":["context/global-context.js","context/sync-context.js","actions/actions.js","components/aws/AWSProfileSelect.js","components/aws/AWSRegionSelect.js","service/log-event-service.js","components/log-group/log-group-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","components/aws/AWSProfileSection.js","components/filter-input/filter-input.js","components/scroll-to.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","components/sync/synchronized-content.js","components/scrollable.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","tail","pagination","pageSize","selectedProfile","options","credentials","profilesLoaded","regions","us-east-2","us-east-1","us-west-1","us-west-2","ap-east-1","ap-south-1","ap-northeast-3","ap-northeast-2","ap-southeast-1","ap-southeast-2","ap-northeast-1","ca-central-1","cn-north-1","cn-northwest-1","eu-west-1","eu-west-2","eu-west-3","eu-north-1","sa-east-1","us-gov-east-1","us-gov-west-1","views","right","left","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitSyncState","aws","SyncContext","SyncState","AddLogGroups","classCallCheck","this","createClass","key","console","log","SelectLogGroup","SetPage","SetTail","SetIndex","SetRegexFilter","regexFilter","SetAWSProfile","profile","defineProperty","AWSProfilesLoaded","AWSSelectProfile","SetViewSection","SetPagination","SyncData","AWSProfileSelect","_Component","_this","profiles","rest","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","filter","_ref2","_ref3","target","map","_ref4","_ref5","currentValue","context","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref6","_ref7","title","Component","contextType","AWSRegionSelect","apply","arguments","region","selectedRegion","es_FormControl","changeHandler","CloudWatchLogsService","secret","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","describeLogGroups","err","resp","stop","_getLogEvents","_callee2","_this2","_context2","filterLogEvents","events","_x","LogGroupSelect","props","undefined","aws_access_key_id","aws_secret_access_key","fetchLogGroups","_fetchLogGroups","cloudWatchLogsService","getLogGroups","sent","t0","selectLogGroup","lg","logGroupName","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","readDirectory","Symbol","iterator","done","isDirectory","traverseDirectory","concat","return","finish","createReader","readEntries","_handleDrop","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","dataTransfer","items","webkitGetAsEntry","handleDrop","error","_x2","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","loadedHandler","_processFile","fileEntry","baseProfile","actionValue","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","responses","_this3","processFile","all","file_drop_FileDrop","AWSProfileSection","Button","onClick","toggleLeftSide","variant","toggleRightSide","Row","Col","renderSelectProfile","renderLoadProfile","renderAWSFiltersSection","renderRoleSection","md","log_group_select_LogGroupSelect","AWSConfigFileDrop_LoadAWSProfiles","loadedProfilesHandler","Consumer","ctx","AWSProfileSelect_AWSProfileSelect","AWSRegionSelect_AWSRegionSelect","RegexFilterInput","reg","RegExp","class","type","handleChange","placeholder","ScrollTo","scrollable","scrollRef","scrollTo","window","offsetTop","height","Page","showLine","showNumbers","regexResponse","colWidth","values","groups","groupVal","lineRender","splice","capt","evt","checked","pageNo","size","start","end","grouped","headers","renderType","pageRender","slice","groupRender","keys","Math","max","floor","captureRender","Container","fluid","Form","Check","inline","label","id","showNumbersHandler","showLineHandler","header","Filter","prevProps","prevState","snapshots","reindex","test","lines","iVal","newPages","ceil","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","logEvents","getLogEvents","logStreamNamePrefix","logEvent","message","fetchEvents","_this$props2","filter_Filter","FileInput","_processFileDelta","_x3","_x4","_callee3","filArr","_context3","selectedFile","_x5","fullPath","cur","fileSize","intervalId","clearInterval","setInterval","tailFile","processFileDelta","pages","selectFile","toggleTail","Paging","nextPage","offset","displayPages","nextpage","prevPage","Pagination","First","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","SynchronizedContent","lastEvent","JSON","stringify","gctx","setTimeout","lastEventString","parsed","newValue","parse","storageEventListener","pull","localStorage","setItem","removeItem","Scrollable","assign","scroll_to_ScrollTo","App","selectedTab","keyEvent","global_context_GlobalState","sync_context_SyncState","gCtx","synchronized_content_SynchronizedContent","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","AWSProfileSection_AWSProfileSection","filter_input_RegexFilterInput","pagination_Paging","scrollable_Scrollable","log_events_LogEvents","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e00bb1a0.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    tail:false,\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n    selectedProfile:{\n      options:{},\n      credentials:{}\n    },\n    profilesLoaded:false,\n    regions:{\n      \"us-east-2\" : \"US East (Ohio)\",\n      \"us-east-1\" : \"US East (N. Virginia)\",\n      \"us-west-1\" : \"US West (N. California)\",\n      \"us-west-2\" : \"US West (Oregon)\",\n      \"ap-east-1\" : \"Asia Pacific (Hong Kong)\",\n      \"ap-south-1\" : \"Asia Pacific (Mumbai)\",\n      \"ap-northeast-3\" : \"Asia Pacific (Osaka-Local)\",\n      \"ap-northeast-2\" : \"Asia Pacific (Seoul)\",\n      \"ap-southeast-1\" : \"Asia Pacific (Singapore)\",\n      \"ap-southeast-2\" : \"Asia Pacific (Sydney)\",\n      \"ap-northeast-1\" : \"Asia Pacific (Tokyo)\",\n      \"ca-central-1\" : \"Canada (Central)\",\n      \"cn-north-1\" : \"China (Beijing)\",\n      \"cn-northwest-1\" : \"China (Ningxia)\",\n      \"eu-west-1\" : \"EU (Ireland)\",\n      \"eu-west-2\" : \"EU (London)\",\n      \"eu-west-3\" : \"EU (Paris)\",\n      \"eu-north-1\" : \"EU (Stockholm)\",\n      \"sa-east-1\" : \"South America (São Paulo)\",\n      \"us-gov-east-1\" : \"AWS GovCloud (US-East)\",\t\n      \"us-gov-west-1\" : \"AWS GovCloud (US)\"\t\t\n    },\n    views:{\n      right:\"filters\",\n      left:\"load\"\n    }\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitSyncState = {\n    aws:{\n        \n    }\n};\n\nexport const SyncContext = createContext(InitSyncState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const SyncState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitSyncState);\n\n    return (\n      <SyncContext.Provider value={{...state, dispatch}}>\n        {children}\n      </SyncContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AddLogGroups\",this.value);\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SelectLogGroup\",this.value);\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPage\",this.value);\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\n\nexport class SetTail{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetTail\",this.value);\n        return {\n            ...state,\n            tail:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetIndex\",this.value);\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetRegexFilter\",this.value);\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].options),\n                        ...(this.value && this.value.options)\n                    },\n                    credentials:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].credentials),\n                        ...(this.value && this.value.credentials)\n                    }\n                }\n            }\n        };\n\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSSelectProfile\",this.value);\n        return {\n            ...state,\n            selectedProfile:{\n                ...state.selectedProfile,\n                options:{\n                   ...state.selectedProfile.options,\n                    ...this.value.options\n                },\n                credentials:{\n                    ...state.selectedProfile.credentials,\n                    ...this.value.credentials\n                }\n            }\n        }\n    }\n}\nexport class SetViewSection{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetViewSection\",this.value);\n        return {\n            ...state,\n            views:{\n                ...state.views,\n                ...this.value\n            }\n        }\n    }\n}\nexport class SetPagination{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPagination\",this.value);\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\nexport class SyncData{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SyncData\",this.value);\n        return {\n            ...this.value\n        }\n    }\n}","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {GlobalContext} from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./AWSProfileSelect.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profiles,rest}) {\n        super({...profiles,...rest});\n        this.state = {profiles:profiles} || {profiles:{}};\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.state.profiles).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        console.log(\"selectedProfileEntry\",selectedProfileEntry);\n        if(selectedProfileEntry && this.context.profilesLoaded){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n       this.context.dispatch(new AWSSelectProfile(this.state.profiles['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profile</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.state.profiles).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n// import {SetAWSCredential,SetAWSOptions, SetAWSProfile,A\n\nconst DEFAULT_REGION = \"ap-southeast-2\";\nexport class AWSRegionSelect extends Component{\n    static contextType = GlobalContext;\n\n    changeHandler(event){\n        this.context.dispatch(new AWSSelectProfile({options:{region:event.target.value}}));\n    }\n\n    render(){\n        let selectedRegion =  this.context.selectedProfile && this.context.selectedProfile.options && this.context.selectedProfile.options.region || DEFAULT_REGION\n\n        return (\n            <>\n                <label>Region</label>\n                <FormControl as=\"select\" onChange={this.changeHandler.bind(this)} defaultValue={selectedRegion}>\n                    {   Object.entries(this.context.regions).map( ([key,value])=>{\n                            return (\n                                    <option key={key} value={key}>{value}</option>\n                                )   \n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    \n    }\n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.events);\n                }\n              });\n        });\n    }\n\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.region = undefined;\n        this.key = undefined;\n        this.secret = undefined;\n    };\n\n    componentDidUpdate() {\n        \n        let profile = this.context.selectedProfile;\n\n        let region = (profile && profile.options && profile.options.region) || this.region;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || this.key;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || this.secret;\n\n        if(this.region !== region || this.key !== key || this.secret !== secret){\n            \n            this.region = region;\n            this.key = key;\n            this.secret = secret; \n\n            this.fetchLogGroups();   \n        }\n        \n    } \n\n    async fetchLogGroups(){\n        console.log(\"fetchLogGroups\",this);\n        if(this.key && this.secret && this.region){\n            console.log(\"fetchLogGroups fetching\",this);\n            let cloudWatchLogsService = new CloudWatchLogsService(this.key,this.secret,this.region);\n            try {\n                let logGroups =  await cloudWatchLogsService.getLogGroups();\n                this.context.dispatch(new AddLogGroups(logGroups));\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    componentDidMount(){\n        let profile = this.context.selectedProfile;\n\n        this.region = (profile && profile.options && profile.options.region) || null;\n        this.key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        this.secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null;\n\n        console.log(\"componentDidMount\",this);\n\n        this.fetchLogGroups(profile);\n    }\n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n\n      let entry  = item.webkitGetAsEntry();\n\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { SyncContext } from \"../../context/sync-context\";\nimport {SetAWSProfile} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;       \n\nexport class LoadAWSProfiles extends Component{\n    static contextType = SyncContext;\n\n    constructor({loadedHandler,rest}){\n        super(rest);\n        this.profilesLoaded = loadedHandler;\n        this.profiles = {};\n    }\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n\n            let baseProfile = {credentials:{},options:{}}\n            let actionValue = (fileEntry.name === 'credentials')? baseProfile.credentials:baseProfile.options;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    actionValue[keyVal[1].trim()] = keyVal[2].trim();                                \n                }\n\n                this.profiles[currentProfile] = {\n                    options:{\n                        ...(this.profiles[currentProfile] && this.profiles[currentProfile].options),\n                        ...baseProfile.options\n                    },\n                    credentials:{\n                        ...(this.profiles[currentProfile] && this.profiles[currentProfile].credentials),\n                        ...baseProfile.credentials\n                    }\n                }\n\n            });\n\n\n            \n        }\n        \n       \n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);   \n                if(this.profilesLoaded){\n                    Object.entries(this.profiles).forEach(([key,value])=>{\n                        this.context.dispatch(new SetAWSProfile(key,value));\n                    });\n                    this.profilesLoaded();\n                }\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import React,{Component} from \"react\";\nimport {Row,Col, Button} from 'react-bootstrap';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SyncContext} from \"../../context/sync-context\";\nimport {AWSProfileSelect} from \"./AWSProfileSelect\";\nimport {AWSRegionSelect} from \"./AWSRegionSelect\";\nimport {LogGroupSelect} from \"../log-group/log-group-select\";\nimport {LoadAWSProfiles} from \"./AWSConfigFileDrop\";\nimport {SetViewSection,AWSProfilesLoaded} from \"../../actions/actions\";\nimport \"./AWSProfileSection.css\";\n\n\nconst LOAD = \"load\";\nconst SELECT = \"select\";\nconst ROLES = \"role\";\nconst FILTERS = \"filters\";\n\nexport class AWSProfileSection extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n    }\n\n    toggleLeftSide(){\n        this.context.dispatch(new SetViewSection({left:this.context.views.left === LOAD?SELECT:LOAD}));\n    }\n    toggleRightSide(){\n        this.context.dispatch(new SetViewSection({right:this.context.views.right === ROLES?FILTERS:ROLES}));\n    }\n\n    render(){\n        return (\n            <>\n                {\n                    this.context.profilesLoaded && (\n                        <div className=\"aws-section-button-container\">\n                            <Button onClick={this.toggleLeftSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn profile-load\">{this.context.views.left === SELECT?'Load Profiles':'Use Profiles'}</Button>\n                            <Button onClick={this.toggleRightSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn assume-role\">{this.context.views.right === FILTERS?'Assume Rule':'Log Filters'}</Button>\n                        </div>\n                    )\n                }\n                <Row>\n                    <Col className=\"p-0\">{this.context.views.left === SELECT?this.renderSelectProfile():this.renderLoadProfile()}</Col>\n                    {\n                        this.context.profilesLoaded && (\n                            <Col className=\"p-0\">{this.context.views.right === FILTERS?this.renderAWSFiltersSection():this.renderRoleSection()}</Col>\n                        )\n                    }\n                </Row>\n                {\n                    this.context.profilesLoaded && (\n                        <Row className=\"profile-display\">\n                            <Col md={6} ><LogGroupSelect profile={this.context.selectedProfile}></LogGroupSelect></Col>\n                        </Row>\n                    )\n                } \n            </>\n        );\n    }\n\n    loadedProfilesHandler(){\n        console.log(\"loadedProfilesHandler - executing\");;\n        this.context.dispatch(new SetViewSection({left:\"select\"}));\n        this.context.dispatch(new AWSProfilesLoaded(true));\n    }\n\n    renderRoleSection(){\n        return (<div>Roles</div>)\n    }\n\n    renderAWSFiltersSection(){\n        return (<div>AWS LOG Filter Section</div>)\n    }\n\n    renderLoadProfile(){\n        return (\n            <Row className=\"profile-display\" ><Col md={12}><LoadAWSProfiles loadedHandler={this.loadedProfilesHandler.bind(this)}></LoadAWSProfiles></Col></Row>\n        )\n    }\n    renderSelectProfile(){\n        return (\n            <Row className=\"profile-display p-0\">\n                <Col md={6} >\n                    <SyncContext.Consumer>\n                        {ctx=>(<AWSProfileSelect profiles={ctx.aws}></AWSProfileSelect>)}\n                    </SyncContext.Consumer>\n                </Col>    \n                <Col md={6} ><AWSRegionSelect></AWSRegionSelect></Col>\n            </Row>\n        )\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport class  RegexFilterInput extends Component{\n    static contextType = GlobalContext\n\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    handleChange (event){\n        let reg = null;\n        \n        try{\n            reg = new RegExp(event.target.value.trim());\n        }catch(e){\n            console.error(\"should probably handle bad input here \",e);\n            this.setState({error:\"Invalid Regular Expression.\"});\n        }\n\n        if(reg){\n            this.setState({error:undefined});\n            this.context.dispatch(new SetRegexFilter(reg));\n        }\n    }\n    render(){\n        return (\n            <div {...this.props}>\n                {this.state.error && ( <div class=\"text-warning\">{this.state.error}</div>)}\n                <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={this.handleChange.bind(this)} placeholder=\"regex filter\" defaultValue={this.context.filters.regexFilter} ></FormControl>\n            </div>\n        )\n    }\n}","import React,{Component} from \"react\";\nimport {GlobalContext} from \"../context/global-context\";\n\nexport class ScrollTo extends Component {\n    static contextType = GlobalContext;\n    constructor(props) {\n        super(props)\n        this.scrollable = props.scrollable;\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n    componentDidUpdate(){\n        this.context.tail && this.scrollTo();\n    }\n    scrollTo(){\n        let scrollable =  (this.scrollable && this.scrollable.current) || window\n        this.scrollRef && scrollable.scrollTo(0, this.scrollRef.current.offsetTop); // run this method to execute scrolling. \n\n    }\n\n    render() {\n        return <div style={{height:\"1px\"}} ref={this.scrollRef} ></div> \n    }   // attach the ref property to a dom element\n  \n}","import React, { Component } from \"react\";\nimport { Row, Col, Container,Form} from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\nimport {ScrollTo} from \"../scroll-to\";\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  constructor(props){\n    super(props);\n    this.state= {showLine:true,showNumbers:true}\n  }\n\n  groupRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{Object.values(regexResponse.groups).map((groupVal)=>{return (<Col md={colWidth}>{groupVal}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  captureRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{regexResponse.splice(1,regexResponse.length).map((capt)=>{ return (<Col md={colWidth}>{capt}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  lineRender(line,regexResponse,colWidth){\n    return line;\n  }\n  showLineHandler(evt){\n    this.setState({...this.state,showLine:evt.target.checked})\n  }\n  showNumbersHandler(evt){\n    this.setState({...this.state,showNumbers:evt.target.checked})\n  }\n  render() {\n    let pageNo = this.context.pagination.page;\n    let size = this.context.pagination.pageSize;\n\n    let start = pageNo * size;\n    let end = start + size;\n    let grouped = false;\n    let headers = []; \n    let renderType = this.lineRender.bind(this);\n\n    let colWidth = \"auto\";\n\n    let pageRender = this.context.page\n    .filter((line,i )=> {\n      return this.context.index[i];\n    })\n    .slice(start,end)\n    .map((line, index) => {\n      let regexResponse = this.context.filters && this.context.filters.regexFilter && this.context.filters.regexFilter.exec(line);\n      if(index === 0 && regexResponse && regexResponse.length > 1){\n        grouped = true;\n        if(regexResponse.groups){\n          renderType = this.groupRender.bind(this);\n          headers = Object.keys(regexResponse.groups);\n          if(headers.length > 0){\n            colWidth = Math.max(Math.floor(12/headers.length),1);  \n          }\n        }else{\n          renderType = this.captureRender.bind(this);\n        }\n      }\n      \n      return (\n        <Row className=\"line-row\" key={index}>\n          { this.state.showNumbers && (<div className=\"num-col text-center\">{start + index + 1}</div>)}  \n          <Col md={this.state.showNumbers?11:12} className=\"page-line\">{renderType(line,regexResponse,colWidth)}</Col>\n        </Row>\n      );\n    })\n\n    return (\n      <Container fluid={true}>\n        <Row>\n          {pageRender.length > 0 && (<Form.Check inline label=\"numbers\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showNumbers} onChange={this.showNumbersHandler.bind(this)}/>)}\n          {\n            grouped && <Form.Check inline label=\"raw\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showLine} onChange={this.showLineHandler.bind(this)}/>\n          }  \n        </Row>      \n        {\n          headers.length > 0 && (\n          <Row>\n            <div className=\"num-col text-center\"></div>\n            <Col md={11} className=\"page-line\">\n              <Row >{headers.map((header)=>{ return (<Col md={colWidth}>{header}</Col>) })}</Row>\n            </Col>\n            \n          </Row>)\n        }\n        {pageRender}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            let pagination = this.context.pagination;\n            let page = pagination.page;\n            if(lines){\n                let newPages = Math.ceil(lines / pagination.pageSize);\n                if(pagination.page > newPages){\n                  page = newPages; \n                }\n            }else{\n                page = 0;\n            }\n\n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length,page:page}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n\n        // let pages = (this.context.pages / this.context.pageSize) + (this.context.pages % this.context.pageSize > 0)?1:0;\n        // let pageSize = this.context.pagination.pageSize;\n        \n\n        // console.log(this.context.pagination);\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n\n\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n  async fetchEvents() {\n    let { profile, logGroup } = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let logEvents = (await cloudWatchLogsService.getLogEvents({\n          logGroupName: logGroup,\n          logStreamNamePrefix: \"20\"\n        }))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n        console.log(\"logEvents\",logEvents);\n        this.context.dispatch(new SetPage(logEvents));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup } = this.props;\n    if (\n      profile &&\n      logGroup &&\n      (profile !== prevProps.profile || logGroup !== prevProps.logGroup)\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl,Form,Col,Row} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage,SetTail,SetPagination} from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async processFileDelta(fileEntry,start,end){\n        let reader = FileReaderService.getInstance();\n        let file = (await new Promise((resolve,reject)=>fileEntry.file(resolve,reject))).slice(start,end);\n        let content = await reader.readFile(file);\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(this.context.page.concat(lines)));\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr,selectedFile:filArr[0]});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        });\n        this.setState({selectedFile:selectedFile});\n        this.processFile(selectedFile); //set the file as selected. \n\n    }\n\n    tailFile(fileEntry){\n        \n        fileEntry.file((file,err)=>{\n            if(this.state.fileSize !== file.size){\n                this.setState({fileSize:file.size});\n            }\n        });\n    }\n\n    toggleTail(event){\n       this.context.dispatch(new SetTail(event.target[\"checked\"])); \n    }\n\n    componentDidUpdate(prevProps,prevState){\n\n\n\n        if(this.state.tail && this.state.selectedFile && \n                !(prevState && prevState.tail && prevState.selectedFile && prevState.selectedFile === this.state.selectedFile)\n            ){\n            let intervalId = window.setInterval(this.tailFile.bind(this),500,this.state.selectedFile);\n            this.setState({intervalId:intervalId});   \n        }else if(!this.context.tail){    \n            this.state.intervalId && window.clearInterval(this.state.intervalId);\n        }\n\n\n        if(prevState.fileSize && prevState.fileSize !== this.state.fileSize){\n\n            if(prevState.fileSize < this.state.fileSize){\n                this.processFileDelta(this.state.selectedFile,prevState.fileSize,this.state.fileSize);\n            }else{\n                this.processFile(this.state.selectedFile);\n            }\n            \n            //read the file dif;\n        }\n\n        let pagination = this.context.pagination;\n\n        if(pagination.lines && this.context.tail){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n            if(pagination.page !== pages-1){\n                this.context.dispatch(new SetPagination({page:(pages-1)}));\n            }\n        }\n\n        this.context.tail !== this.state.tail && this.setState({tail:this.context.tail});\n    }\n\n    \n    componentWillUnmount(){\n        this.state.intervalId && window.clearInterval(this.state.intervalId);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <Row>\n                        <Col md={11}>\n                            <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                                {\n                                    this.state.files.map((file)=>{\n                                        return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                                    })\n                                } \n                            </FormControl> \n                        </Col>\n                        <Col md={1}><Form.Check type=\"checkbox\" label=\"tail\" onChange={this.toggleTail.bind(this)} checked={this.context.tail || false}/></Col> \n                    </Row>\n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination,SetTail} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    \n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetTail(false));\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(evt){\n\n        this.context.dispatch(new SetPagination({pageSize:(evt.target.value)}));\n\n\n    }\n\n    componentDidUpdate(){\n       \n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.pageSize && pagination.pageSize > 0){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                if((i+offset + 1) > 0){\n                    displayPages[i] = (i + offset + 1);\n                }\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={1}><label>Page Size</label></Col>\n                <Col md={2}>  \n                    <FormControl className=\"\" as=\"input\" size=\"sm\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl>                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{\n            return (\n                <Row>\n                    <Col md={9}></Col>\n                    <Col md={1}><label>Page Size</label></Col>\n                    <Col md={2}>  \n                        <FormControl className=\"\" as=\"input\" size=\"sm\" type=\"number\" value={pagination.pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl>                    \n                    </Col>\n                </Row>\n            )\n        }\n        \n    }\n\n}","import React,{Component} from \"react\";\nimport {SyncContext,InitSyncState} from \"../../context/sync-context\";\nimport {SyncData,AWSProfilesLoaded,SetViewSection} from \"../../actions/actions\";\n\nconst PUSH_EVENT_KEY = \"push_ss_file_filter\";\nconst PULL_EVENT_KEY = \"pull_ss_file_filter\";\n\nexport class SynchronizedContent extends Component{\n    static contextType = SyncContext;\n    constructor(props){\n        super(props);\n        this.lastEvent = InitSyncState;\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        let {aws} = this.context;\n        if(aws && JSON.stringify(this.lastEvent) !== JSON.stringify(aws)){\n            console.log(\"SYNC AWS\", aws);\n            this.push(aws);         \n        } \n\n        let profilesLoaded = aws && Object.keys(aws).length > 0;\n       \n        if(profilesLoaded && this.props.gctx.profilesLoaded !== profilesLoaded) {\n            window.setTimeout(()=>{ //doesnt like me doing dispatches in the same update loop. put the updates in the next one.\n                this.props.gctx.dispatch(new SetViewSection({left:\"select\"}));\n                this.props.gctx.dispatch(new AWSProfilesLoaded(profilesLoaded));\n            },0);\n        };\n    }\n\n    storageEventListener(event){\n        let lastEventString = (this.lastEvent && JSON.stringify(this.lastEvent)) || null;\n        \n        if(event.key !== PULL_EVENT_KEY && event.key !== PUSH_EVENT_KEY) return; //we dont care about other events.\n\n        let parsed = (event.newValue && JSON.parse(event.newValue)) || null;\n\n        if(!parsed) return; // do nothing if no value to work with\n        if (event.key == PULL_EVENT_KEY && lastEventString) {\n            this.push(this.lastEvent); //Another tab requested content\n        } else if (event.key == PUSH_EVENT_KEY && event.newValue !== lastEventString ) {\n            //received new data. update context.\n            this.lastEvent = parsed;\n            this.context.dispatch(new SyncData({aws:parsed}));              \n        }\n    }\n\n    componentWillMount(){\n        window.addEventListener('storage', this.storageEventListener.bind(this) , false);\n        \n        this.pull();\n    }\n\n    push(value){\n        this.lastEvent = value; \n        window.localStorage.setItem(PUSH_EVENT_KEY, JSON.stringify(value));\n        // the other tab should now have it, so we're done with it.\n        window.setTimeout(()=>{\n            window.localStorage.removeItem(PUSH_EVENT_KEY); // <- could do short timeout as well.\n        },10);\n    }\n\n    pull(){   \n        window.localStorage.setItem(PULL_EVENT_KEY,\"{}\");\n        window.localStorage.removeItem(PULL_EVENT_KEY);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('storage', this.storageEventListener.bind(this) , false);\n    }\n    render(){    \n        return (<></>)\n    }\n}","import React,{Component} from \"react\";\nimport {ScrollTo} from \"./scroll-to\";\n\nexport class Scrollable extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n   \n\n    render() {\n        return (\n            <div ref={this.scrollRef} {...this.props}>\n                {this.props.children}\n                <ScrollTo scrollable={this.scrollRef}></ScrollTo>\n            </div>\n        ) \n    }   // attach the ref property to a dom element\n  \n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {SyncState,SyncContext} from \"./context/sync-context\";\nimport {AWSProfileSection} from \"./components/aws/AWSProfileSection\"\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\nimport {SynchronizedContent} from \"./components/sync/synchronized-content\";\nimport {Scrollable} from \"./components/scrollable\";\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <SyncState>\n        <GlobalContext.Consumer>\n          {gCtx => ( <SynchronizedContent gctx={gCtx}></SynchronizedContent>)}\n        </GlobalContext.Consumer>\n          \n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSProfileSection></AWSProfileSection>\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <Scrollable className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && (<Filter></Filter>)\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  \n                  <GlobalContext.Consumer>\n                    {gCtx => ( gCtx.profilesLoaded && gCtx.selectedProfile &&  gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (\n                  \n                        <LogEvents profile={gCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName}></LogEvents>\n                        \n                      ))}\n                  </GlobalContext.Consumer>\n                  \n                )\n              }\n              \n              \n              </Scrollable>\n            <footer ></footer>\n          </div>\n        </SyncState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}