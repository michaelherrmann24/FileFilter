{"version":3,"sources":["context/global-context.js","context/aws-context.js","actions/actions.js","components/aws/AWSProfileSelect.js","components/aws/AWSRegionSelect.js","service/log-event-service.js","components/log-group/log-group-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","components/aws/AWSProfileSection.js","components/filter-input/filter-input.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","pagination","pageSize","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitAWSState","aws","profilesLoaded","selectedProfile","options","credentials","regions","us-east-2","us-east-1","us-west-1","us-west-2","ap-east-1","ap-south-1","ap-northeast-3","ap-northeast-2","ap-southeast-1","ap-southeast-2","ap-northeast-1","ca-central-1","cn-north-1","cn-northwest-1","eu-west-1","eu-west-2","eu-west-3","eu-north-1","sa-east-1","us-gov-east-1","us-gov-west-1","views","right","left","AWSContext","AWSState","AddLogGroups","classCallCheck","this","createClass","key","console","log","SelectLogGroup","SetPage","SetIndex","SetRegexFilter","regexFilter","SetAWSCredential","profile","defineProperty","SetAWSOptions","SetAWSProfile","AWSProfilesLoaded","AWSSelectProfile","SetViewSection","SetPagination","AWSProfileSelect","_Component","props","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","context","filter","_ref2","target","map","_ref3","_ref4","currentValue","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref5","_ref6","title","Component","contextType","AWSRegionSelect","apply","arguments","region","selectedRegion","es_FormControl","changeHandler","CloudWatchLogsService","secret","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","asyncToGenerator","regenerator_default","mark","_callee","_this","wrap","_context","prev","next","abrupt","Promise","resolve","reject","describeLogGroups","err","resp","stop","_getLogEvents","_callee2","_this2","_context2","filterLogEvents","events","_x","LogGroupSelect","prevProps","prevprofile","aws_access_key_id","aws_secret_access_key","prevregion","prevkey","prevsecret","fetchLogGroups","_fetchLogGroups","cloudWatchLogsService","getLogGroups","sent","t0","selectLogGroup","lg","logGroupName","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","readDirectory","undefined","Symbol","iterator","done","isDirectory","traverseDirectory","concat","return","finish","createReader","readEntries","_handleDrop","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","dataTransfer","items","webkitGetAsEntry","handleDrop","error","_x2","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","_processFile","fileEntry","actionClass","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","actionInst","responses","processFile","all","file_drop_FileDrop","AWSProfileSection","Button","onClick","toggleLeftSide","variant","toggleRightSide","Row","Col","renderSelectProfile","renderLoadProfile","renderAWSFiltersSection","renderRoleSection","md","log_group_select_LogGroupSelect","test","AWSConfigFileDrop_LoadAWSProfiles","AWSProfileSelect_AWSProfileSelect","AWSRegionSelect_AWSRegionSelect","RegexFilterInput","reg","RegExp","class","type","handleChange","placeholder","Page","showLine","showNumbers","regexResponse","values","groups","groupVal","lineRender","splice","capt","evt","checked","pageNo","size","start","end","grouped","headers","renderType","pageRender","slice","groupRender","keys","captureRender","Container","fluid","Form","Check","inline","label","id","showNumbersHandler","showLineHandler","header","Filter","prevState","snapshots","reindex","lines","iVal","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","logEvents","getLogEvents","logStreamNamePrefix","logEvent","message","fetchEvents","_this$props2","filter_Filter","FileInput","filArr","selectedFile","fullPath","cur","selectFile","Paging","nextPage","pages","Math","ceil","offset","displayPages","nextpage","prevPage","Pagination","First","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","App","selectedTab","keyEvent","global_context_GlobalState","aws_context_AWSState","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","AWSProfileSection_AWSProfileSection","filter_input_RegexFilterInput","pagination_Paging","Consumer","gCtx","aCtx","log_events_LogEvents","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7be2f9e6.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitAWSState = {\n    aws:{\n        \n    },\n    profilesLoaded:false,\n    selectedProfile:{\n      options:{},\n      credentials:{}\n    },\n    regions:{\n      \"us-east-2\" : \"US East (Ohio)\",\n      \"us-east-1\" : \"US East (N. Virginia)\",\n      \"us-west-1\" : \"US West (N. California)\",\n      \"us-west-2\" : \"US West (Oregon)\",\n      \"ap-east-1\" : \"Asia Pacific (Hong Kong)\",\n      \"ap-south-1\" : \"Asia Pacific (Mumbai)\",\n      \"ap-northeast-3\" : \"Asia Pacific (Osaka-Local)\",\n      \"ap-northeast-2\" : \"Asia Pacific (Seoul)\",\n      \"ap-southeast-1\" : \"Asia Pacific (Singapore)\",\n      \"ap-southeast-2\" : \"Asia Pacific (Sydney)\",\n      \"ap-northeast-1\" : \"Asia Pacific (Tokyo)\",\n      \"ca-central-1\" : \"Canada (Central)\",\n      \"cn-north-1\" : \"China (Beijing)\",\n      \"cn-northwest-1\" : \"China (Ningxia)\",\n      \"eu-west-1\" : \"EU (Ireland)\",\n      \"eu-west-2\" : \"EU (London)\",\n      \"eu-west-3\" : \"EU (Paris)\",\n      \"eu-north-1\" : \"EU (Stockholm)\",\n      \"sa-east-1\" : \"South America (São Paulo)\",\n      \"us-gov-east-1\" : \"AWS GovCloud (US-East)\",\t\n      \"us-gov-west-1\" : \"AWS GovCloud (US)\"\t\t\n    },\n    views:{\n      right:\"filters\",\n      left:\"load\"\n    }\n};\n\nexport const AWSContext = createContext(InitAWSState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const AWSState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitAWSState);\n\n    return (\n      <AWSContext.Provider value={{...state, dispatch}}>\n        {children}\n      </AWSContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AddLogGroups\",this.value);\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SelectLogGroup\",this.value);\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPage\",this.value);\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetIndex\",this.value);\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetRegexFilter\",this.value);\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSCredential{\n    constructor(profile,value){\n        this.value = value;\n        this.profile = profile;\n    }\n    reduce(state){\n        console.log(\"SetAWSCredential\",this.value);\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    credentials:{\n                        ...state.aws[this.profile].credentials,\n                        ...this.value\n                    }\n                }\n            }\n        };\n        return results;\n    }\n}\n\nexport class SetAWSOptions{\n    constructor(profile,value){\n        this.value = value;\n        this.profile = profile;\n    }\n    reduce(state){\n        console.log(\"SetAWSOptions\",this.value);\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...state.aws[this.profile].options,\n                        ...this.value\n                    }\n                }\n            }\n        };\n        return results;\n    }\n}\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        console.log(\"SetAWSProfile\",this.value);\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    ...this.value[this.profile]      \n                }\n            }\n        };\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSProfilesLoaded\",this.value);\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSSelectProfile\",this.value);\n        return {\n            ...state,\n            selectedProfile:{\n                ...state.selectedProfile,\n                options:{\n                   ...state.selectedProfile.options,\n                    ...this.value.options\n                },\n                credentials:{\n                    ...state.selectedProfile.credentials,\n                    ...this.value.credentials\n                }\n            }\n        }\n    }\n}\nexport class SetViewSection{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetViewSection\",this.value);\n        return {\n            ...state,\n            views:{\n                ...state.views,\n                ...this.value\n            }\n        }\n    }\n}\nexport class SetPagination{SetAWSCredential\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPagination\",this.value);\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\n","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {AWSContext} from \"../../context/aws-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./AWSProfileSelect.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = AWSContext;\n\n    constructor(props) {\n        super(props);\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.context.aws).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        if(selectedProfileEntry){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n        this.context.dispatch(new AWSSelectProfile(this.context.aws['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profile</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.context.aws).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport { AWSContext } from \"../../context/aws-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n// import {SetAWSCredential,SetAWSOptions, SetAWSProfile,A\n\nconst DEFAULT_REGION = \"ap-southeast-2\";\nexport class AWSRegionSelect extends Component{\n    static contextType = AWSContext;\n\n    changeHandler(event){\n        this.context.dispatch(new AWSSelectProfile({options:{region:event.target.value}}));\n    }\n\n    render(){\n        let selectedRegion =  this.context.selectedProfile && this.context.selectedProfile.options && this.context.selectedProfile.options.region || DEFAULT_REGION\n\n        return (\n            <>\n                <label>Region</label>\n                <FormControl as=\"select\" onChange={this.changeHandler.bind(this)} defaultValue={selectedRegion}>\n                    {   Object.entries(this.context.regions).map( ([key,value])=>{\n                            return (\n                                    <option key={key} value={key}>{value}</option>\n                                )   \n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    \n    }\n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.events);\n                }\n              });\n        });\n    }\n\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n    }\n\n    componentDidUpdate(prevProps) {\n        \n        let {profile} = this.props;\n        let prevprofile = prevProps && prevProps.profile;\n\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        let prevregion = (prevprofile && prevprofile.options && prevprofile.options.region) || null;\n        let prevkey = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_access_key_id) || null;\n        let prevsecret = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_secret_access_key) || null; \n\n        if(region !== prevregion || key !== prevkey || secret !== prevsecret){\n            this.fetchLogGroups(profile);   \n        }\n        \n    } \n//\n    async fetchLogGroups(profile){\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        if(key && secret && region){\n            let cloudWatchLogsService = new CloudWatchLogsService(key,secret,region);\n            try {\n                let logGroups =  await cloudWatchLogsService.getLogGroups();\n                this.context.dispatch(new AddLogGroups(logGroups));\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"did mount\");\n        // let {profile} = this.props;\n        // this.fetchLogGroups(profile);\n    }\n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n\n    console.log(e.dataTransfer.items,e.dataTransfer.files);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n      let entry  = item.webkitGetAsEntry();\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { AWSContext } from \"../../context/aws-context\";\nimport {SetAWSCredential,SetAWSOptions, SetAWSProfile,AWSProfilesLoaded,SetViewSection} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;\n\nexport class LoadAWSProfiles extends Component{\n    static contextType = AWSContext;\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n            let actionClass = (fileEntry.name === 'credentials')? SetAWSCredential:SetAWSOptions;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n\n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:{}}));\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    let value = {};\n                    value[keyVal[1].trim()] = keyVal[2].trim();\n                    \n                    let actionInst = new actionClass(currentProfile,value);\n                    this.context.dispatch(actionInst);\n                    \n                }\n\n            });\n            \n        }\n        this.context.dispatch(new AWSProfilesLoaded(true));\n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);    \n                this.context.dispatch(new SetViewSection({left:\"select\"}));\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import React,{Component} from \"react\";\nimport {Row,Col, Button} from 'react-bootstrap';\nimport {AWSContext} from \"../../context/aws-context\";\nimport {AWSProfileSelect} from \"./AWSProfileSelect\";\nimport {AWSRegionSelect} from \"./AWSRegionSelect\";\nimport {LogGroupSelect} from \"../log-group/log-group-select\";\nimport {LoadAWSProfiles} from \"./AWSConfigFileDrop\";\nimport {SetViewSection} from \"../../actions/actions\";\nimport \"./AWSProfileSection.css\";\n\n\nconst LOAD = \"load\";\nconst SELECT = \"select\";\nconst ROLES = \"role\";\nconst FILTERS = \"filters\";\n\nexport class AWSProfileSection extends Component{\n    static contextType = AWSContext;\n\n    constructor(){\n        super();\n    }\n\n    toggleLeftSide(){\n        this.context.dispatch(new SetViewSection({left:this.context.views.left === LOAD?SELECT:LOAD}));\n    }\n    toggleRightSide(){\n        this.context.dispatch(new SetViewSection({right:this.context.views.right === ROLES?FILTERS:ROLES}));\n    }\n\n    render(){\n        return (\n            <>\n                {\n                    this.context.profilesLoaded && (\n                        <div className=\"aws-section-button-container\">\n                            <Button onClick={this.toggleLeftSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn profile-load\">{this.context.views.left === SELECT?'Load Profiles':'Use Profiles'}</Button>\n                            <Button onClick={this.toggleRightSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn assume-role\">{this.context.views.right === FILTERS?'Assume Rule':'Log Filters'}</Button>\n                        </div>\n                    )\n                }\n                <Row>\n                    <Col className=\"p-0\">{this.context.views.left === SELECT?this.renderSelectProfile():this.renderLoadProfile()}</Col>\n                    {\n                        this.context.profilesLoaded && (\n                            <Col className=\"p-0\">{this.context.views.right === FILTERS?this.renderAWSFiltersSection():this.renderRoleSection()}</Col>\n                        )\n                    }\n                </Row>\n                {\n                    this.context.profilesLoaded && (\n                        <Row className=\"profile-display\">\n                            <Col md={6} ><LogGroupSelect test=\"test\" profile={this.context.selectedProfile}></LogGroupSelect></Col>\n                        </Row>\n                    )\n                } \n            </>\n        );\n    }\n\n    renderRoleSection(){\n        return (<div>Roles</div>)\n    }\n\n    renderAWSFiltersSection(){\n        return (<div>AWS LOG Filter Section</div>)\n    }\n\n    renderLoadProfile(){\n        return (\n            <Row className=\"profile-display\" ><Col md={12}><LoadAWSProfiles></LoadAWSProfiles></Col></Row>\n        )\n    }\n    renderSelectProfile(){\n        return (\n            <Row className=\"profile-display p-0\">\n                <Col md={6} ><AWSProfileSelect></AWSProfileSelect></Col>\n                <Col md={6} ><AWSRegionSelect></AWSRegionSelect></Col>\n            </Row>\n        )\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport class  RegexFilterInput extends Component{\n    static contextType = GlobalContext\n\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    handleChange (event){\n        let reg = null;\n        \n        try{\n            reg = new RegExp(event.target.value.trim());\n        }catch(e){\n            console.error(\"should probably handle bad input here \",e);\n            this.setState({error:\"Invalid Regular Expression.\"});\n        }\n\n        if(reg){\n            this.setState({error:undefined});\n            this.context.dispatch(new SetRegexFilter(reg));\n        }\n    }\n    render(){\n        return (\n            <div {...this.props}>\n                {this.state.error && ( <div class=\"text-warning\">{this.state.error}</div>)}\n                <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={this.handleChange.bind(this)} placeholder=\"regex filter\" defaultValue={this.context.filters.regexFilter} ></FormControl>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Row, Col, Container,Form} from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  constructor(props){\n    super(props);\n    this.state= {showLine:true,showNumbers:true}\n  }\n\n  groupRender(line,regexResponse){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{Object.values(regexResponse.groups).map((groupVal)=>{return (<Col md=\"auto\">{groupVal}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse);\n  }\n  captureRender(line,regexResponse){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{regexResponse.splice(1,regexResponse.length).map((capt)=>{ return (<Col md=\"auto\">{capt}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse);\n  }\n  lineRender(line,regexResponse){\n    return line;\n  }\n  showLineHandler(evt){\n    this.setState({...this.state,showLine:evt.target.checked})\n  }\n  showNumbersHandler(evt){\n    this.setState({...this.state,showNumbers:evt.target.checked})\n  }\n  render() {\n    let pageNo = this.context.pagination.page;\n    let size = this.context.pagination.pageSize;\n\n    let start = pageNo * size;\n    let end = start + size;\n    let grouped = false;\n    let headers = []; \n    let renderType = this.lineRender.bind(this);\n\n    let pageRender = this.context.page\n    .filter((line,i )=> {\n      return this.context.index[i];\n    })\n    .slice(start,end)\n    .map((line, index) => {\n      let regexResponse = this.context.filters && this.context.filters.regexFilter && this.context.filters.regexFilter.exec(line);\n      if(index === 0 && regexResponse && regexResponse.length > 1){\n        grouped = true;\n        if(regexResponse.groups){\n          renderType = this.groupRender.bind(this);\n          headers = Object.keys(regexResponse.groups);\n        }else{\n          renderType = this.captureRender.bind(this);\n        }\n      }\n      \n      return (\n        <Row className=\"line-row\" key={index}>\n          { this.state.showNumbers && (<div className=\"num-col text-center\">{index}</div>)}  \n          <Col md={this.state.showNumbers?11:12} className=\"page-line\">{renderType(line,regexResponse)}</Col>\n        </Row>\n      );\n    })\n\n\n    return (\n      <Container fluid={true}>\n        <Row>\n          {pageRender.length > 0 && (<Form.Check inline label=\"numbers\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showNumbers} onChange={this.showNumbersHandler.bind(this)}/>)}\n          {\n            grouped && <Form.Check inline label=\"raw\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showLine} onChange={this.showLineHandler.bind(this)}/>\n          }\n        </Row>\n        \n        {\n          headers.length > 0 && (\n          <Row>\n            <div className=\"num-col text-center\"></div>\n            <Col md={11} className=\"page-line\">\n              <Row >{headers.map((header)=>{ return (<Col md=\"auto\">{header}</Col>) })}</Row>\n            </Col>\n            \n          </Row>)\n        }\n        {pageRender}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n\n        // let pages = (this.context.pages / this.context.pageSize) + (this.context.pages % this.context.pageSize > 0)?1:0;\n        // let pageSize = this.context.pagination.pageSize;\n        \n\n        // console.log(this.context.pagination);\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n\n\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n\n  async fetchEvents() {\n    let { profile, logGroup } = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let logEvents = (await cloudWatchLogsService.getLogEvents({\n          logGroupName: logGroup,\n          logStreamNamePrefix: \"20\"\n        }))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n\n        this.context.dispatch(new SetPage(logEvents));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup } = this.props;\n    if (\n      profile &&\n      logGroup &&\n      (profile !== prevProps.profile || logGroup !== prevProps.logGroup)\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage } from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        })\n        this.processFile(selectedFile);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                        {\n                            this.state.files.map((file)=>{\n                                return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                            })\n                        } \n                    </FormControl> \n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    SetPagination\n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(){\n\n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.lines > pagination.pageSize){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                if((i+offset + 1) > 0){\n                    displayPages[i] = (i + offset + 1);\n                }\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            console.log(pagination,pages,offset, displayPages);\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={3}>\n                    <Container className=\"justify-content-end\">\n                    <Row >\n                        <Col><label className=\"col-form-label\">Page Size</label></Col>\n                        <Col><FormControl className=\"\" as=\"input\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl></Col>\n                    </Row>\n                    </Container>\n                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{return <></>}\n        \n    }\n\n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {AWSState,AWSContext} from \"./context/aws-context\";\nimport {AWSProfileSection} from \"./components/aws/AWSProfileSection\"\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\n\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <AWSState>\n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSProfileSection></AWSProfileSection>\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <div className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && \n                (\n                  <GlobalContext.Consumer>\n                    {gCtx => ( <Filter></Filter>)}\n                  </GlobalContext.Consumer>\n                )\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  <AWSContext.Consumer>\n                    {\n                      aCtx =>( \n                        aCtx.profilesLoaded && aCtx.selectedProfile && \n                        (\n                          <GlobalContext.Consumer>\n                            {gCtx => ( gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (<LogEvents profile={aCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName}></LogEvents> ))}\n                          </GlobalContext.Consumer>\n                        ) \n                      )\n                    }\n                  </AWSContext.Consumer>\n                )\n              }\n              \n              \n            </div>\n            <footer ></footer>\n          </div>\n        </AWSState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}