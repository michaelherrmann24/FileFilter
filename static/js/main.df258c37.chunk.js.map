{"version":3,"sources":["context/global-context.js","context/sync-context.js","actions/actions.js","components/aws/AWSProfileSelect.js","components/aws/AWSRegionSelect.js","service/log-event-service.js","components/log-group/log-group-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","components/aws/AWSProfileSection.js","components/filter-input/filter-input.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","components/sync/synchronized-content.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","pagination","pageSize","selectedProfile","options","credentials","profilesLoaded","regions","us-east-2","us-east-1","us-west-1","us-west-2","ap-east-1","ap-south-1","ap-northeast-3","ap-northeast-2","ap-southeast-1","ap-southeast-2","ap-northeast-1","ca-central-1","cn-north-1","cn-northwest-1","eu-west-1","eu-west-2","eu-west-3","eu-north-1","sa-east-1","us-gov-east-1","us-gov-west-1","views","right","left","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitSyncState","aws","SyncContext","SyncState","AddLogGroups","classCallCheck","this","createClass","key","console","log","SelectLogGroup","SetPage","SetIndex","SetRegexFilter","regexFilter","SetAWSProfile","profile","results","defineProperty","AWSProfilesLoaded","AWSSelectProfile","SetViewSection","SetPagination","SyncData","AWSProfileSelect","_Component","_this","profiles","rest","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","filter","_ref2","_ref3","target","map","_ref4","_ref5","currentValue","context","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref6","_ref7","title","Component","contextType","AWSRegionSelect","apply","arguments","region","selectedRegion","es_FormControl","changeHandler","CloudWatchLogsService","secret","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","describeLogGroups","err","resp","stop","_getLogEvents","_callee2","_this2","_context2","filterLogEvents","events","_x","LogGroupSelect","prevProps","prevState","props","prevprofile","aws_access_key_id","aws_secret_access_key","prevregion","prevkey","prevsecret","fetchLogGroups","_fetchLogGroups","cloudWatchLogsService","getLogGroups","sent","t0","selectLogGroup","lg","logGroupName","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","readDirectory","undefined","Symbol","iterator","done","isDirectory","traverseDirectory","concat","return","finish","createReader","readEntries","_handleDrop","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","dataTransfer","items","webkitGetAsEntry","handleDrop","error","_x2","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","loadedHandler","_processFile","fileEntry","baseProfile","actionValue","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","responses","processFile","all","file_drop_FileDrop","AWSProfileSection","Button","onClick","toggleLeftSide","variant","toggleRightSide","Row","Col","renderSelectProfile","renderLoadProfile","renderAWSFiltersSection","renderRoleSection","md","log_group_select_LogGroupSelect","AWSConfigFileDrop_LoadAWSProfiles","loadedProfilesHandler","Consumer","ctx","AWSProfileSelect_AWSProfileSelect","AWSRegionSelect_AWSRegionSelect","RegexFilterInput","reg","RegExp","class","type","handleChange","placeholder","Page","showLine","showNumbers","regexResponse","colWidth","values","groups","groupVal","lineRender","splice","capt","evt","checked","pageNo","size","start","end","grouped","headers","renderType","pageRender","slice","groupRender","keys","Math","max","floor","captureRender","Container","fluid","Form","Check","inline","label","id","showNumbersHandler","showLineHandler","header","Filter","snapshots","reindex","test","lines","iVal","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","logEvents","getLogEvents","logStreamNamePrefix","logEvent","message","fetchEvents","_this$props2","filter_Filter","FileInput","filArr","selectedFile","fullPath","cur","selectFile","Paging","nextPage","pages","ceil","offset","displayPages","nextpage","prevPage","Pagination","First","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","SynchronizedContent","lastEvent","JSON","stringify","gctx","window","setTimeout","lastEventString","parsed","newValue","parse","storageEventListener","pull","localStorage","setItem","removeItem","App","selectedTab","keyEvent","global_context_GlobalState","sync_context_SyncState","gCtx","synchronized_content_SynchronizedContent","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","AWSProfileSection_AWSProfileSection","filter_input_RegexFilterInput","pagination_Paging","aCtx","log_events_LogEvents","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df258c37.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n    selectedProfile:{\n      options:{},\n      credentials:{}\n    },\n    profilesLoaded:false,\n    regions:{\n      \"us-east-2\" : \"US East (Ohio)\",\n      \"us-east-1\" : \"US East (N. Virginia)\",\n      \"us-west-1\" : \"US West (N. California)\",\n      \"us-west-2\" : \"US West (Oregon)\",\n      \"ap-east-1\" : \"Asia Pacific (Hong Kong)\",\n      \"ap-south-1\" : \"Asia Pacific (Mumbai)\",\n      \"ap-northeast-3\" : \"Asia Pacific (Osaka-Local)\",\n      \"ap-northeast-2\" : \"Asia Pacific (Seoul)\",\n      \"ap-southeast-1\" : \"Asia Pacific (Singapore)\",\n      \"ap-southeast-2\" : \"Asia Pacific (Sydney)\",\n      \"ap-northeast-1\" : \"Asia Pacific (Tokyo)\",\n      \"ca-central-1\" : \"Canada (Central)\",\n      \"cn-north-1\" : \"China (Beijing)\",\n      \"cn-northwest-1\" : \"China (Ningxia)\",\n      \"eu-west-1\" : \"EU (Ireland)\",\n      \"eu-west-2\" : \"EU (London)\",\n      \"eu-west-3\" : \"EU (Paris)\",\n      \"eu-north-1\" : \"EU (Stockholm)\",\n      \"sa-east-1\" : \"South America (São Paulo)\",\n      \"us-gov-east-1\" : \"AWS GovCloud (US-East)\",\t\n      \"us-gov-west-1\" : \"AWS GovCloud (US)\"\t\t\n    },\n    views:{\n      right:\"filters\",\n      left:\"load\"\n    }\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitSyncState = {\n    aws:{\n        \n    }\n};\n\nexport const SyncContext = createContext(InitSyncState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const SyncState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitSyncState);\n\n    return (\n      <SyncContext.Provider value={{...state, dispatch}}>\n        {children}\n      </SyncContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AddLogGroups\",this.value);\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SelectLogGroup\",this.value);\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPage\",this.value);\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetIndex\",this.value);\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetRegexFilter\",this.value);\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        console.log(\"SetAWSProfile\",this.value);\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].options),\n                        ...(this.value[this.profile] && this.value[this.profile].options)\n                    },\n                    credentials:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].credentials),\n                        ...(this.value[this.profile] && this.value[this.profile].credentials)\n                    }\n                }\n            }\n        };\n        console.log(\"set profile result\",results);\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSProfilesLoaded\",this.value);\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSSelectProfile\",this.value);\n        return {\n            ...state,\n            selectedProfile:{\n                ...state.selectedProfile,\n                options:{\n                   ...state.selectedProfile.options,\n                    ...this.value.options\n                },\n                credentials:{\n                    ...state.selectedProfile.credentials,\n                    ...this.value.credentials\n                }\n            }\n        }\n    }\n}\nexport class SetViewSection{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetViewSection\",this.value);\n        return {\n            ...state,\n            views:{\n                ...state.views,\n                ...this.value\n            }\n        }\n    }\n}\nexport class SetPagination{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPagination\",this.value);\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\nexport class SyncData{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SyncData\",this.value);\n        return {\n            ...this.value\n        }\n    }\n}","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {GlobalContext} from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./AWSProfileSelect.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profiles,rest}) {\n        super({...profiles,...rest});\n        this.state = {profiles:profiles} || {profiles:{}};\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.state.profiles).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        console.log(\"selectedProfileEntry\",selectedProfileEntry);\n        if(selectedProfileEntry){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n       this.context.dispatch(new AWSSelectProfile(this.state.profiles['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profile</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.state.profiles).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n// import {SetAWSCredential,SetAWSOptions, SetAWSProfile,A\n\nconst DEFAULT_REGION = \"ap-southeast-2\";\nexport class AWSRegionSelect extends Component{\n    static contextType = GlobalContext;\n\n    changeHandler(event){\n        this.context.dispatch(new AWSSelectProfile({options:{region:event.target.value}}));\n    }\n\n    render(){\n        let selectedRegion =  this.context.selectedProfile && this.context.selectedProfile.options && this.context.selectedProfile.options.region || DEFAULT_REGION\n\n        return (\n            <>\n                <label>Region</label>\n                <FormControl as=\"select\" onChange={this.changeHandler.bind(this)} defaultValue={selectedRegion}>\n                    {   Object.entries(this.context.regions).map( ([key,value])=>{\n                            return (\n                                    <option key={key} value={key}>{value}</option>\n                                )   \n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    \n    }\n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.events);\n                }\n              });\n        });\n    }\n\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profile,rest}){\n        super({...profile,...rest});\n        //this.state = profile;\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        \n        let {profile} = this.props;\n\n        console.log(this.state, prevState);\n\n        let prevprofile = prevProps && prevProps.profile;\n\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        let prevregion = (prevprofile && prevprofile.options && prevprofile.options.region) || null;\n        let prevkey = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_access_key_id) || null;\n        let prevsecret = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_secret_access_key) || null; \n\n        console.log(region,prevregion,key,prevkey,secret,prevsecret,region !== prevregion || key !== prevkey || secret !== prevsecret)\n        if(region !== prevregion || key !== prevkey || secret !== prevsecret){\n            this.fetchLogGroups(profile);   \n        }\n        \n    } \n//\n    async fetchLogGroups(profile){\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        console.log(key,secret,region,key && secret && region);\n        if(key && secret && region){\n            let cloudWatchLogsService = new CloudWatchLogsService(key,secret,region);\n            try {\n                let logGroups =  await cloudWatchLogsService.getLogGroups();\n                this.context.dispatch(new AddLogGroups(logGroups));\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"did mount\",this.props);\n        let {profile} = this.props;\n        this.fetchLogGroups(profile);\n    }\n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n\n    console.log(e.dataTransfer.items,e.dataTransfer.files);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n      let entry  = item.webkitGetAsEntry();\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { SyncContext } from \"../../context/sync-context\";\nimport {SetAWSProfile} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;       \n\nexport class LoadAWSProfiles extends Component{\n    static contextType = SyncContext;\n\n    constructor({loadedHandler,rest}){\n        super(rest);\n        this.profilesLoaded = loadedHandler;\n    }\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n\n            let baseProfile = {credentials:{},options:{}}\n            let actionValue = (fileEntry.name === 'credentials')? baseProfile.credentials:baseProfile.options;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n\n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:baseProfile}));\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    actionValue[keyVal[1].trim()] = keyVal[2].trim();                 \n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:baseProfile}));                  \n                }\n\n            });\n        }\n\n       \n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);   \n                if(this.profilesLoaded){\n                    this.profilesLoaded();\n                }\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import React,{Component} from \"react\";\nimport {Row,Col, Button} from 'react-bootstrap';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SyncContext} from \"../../context/sync-context\";\nimport {AWSProfileSelect} from \"./AWSProfileSelect\";\nimport {AWSRegionSelect} from \"./AWSRegionSelect\";\nimport {LogGroupSelect} from \"../log-group/log-group-select\";\nimport {LoadAWSProfiles} from \"./AWSConfigFileDrop\";\nimport {SetViewSection,AWSProfilesLoaded} from \"../../actions/actions\";\nimport \"./AWSProfileSection.css\";\n\n\nconst LOAD = \"load\";\nconst SELECT = \"select\";\nconst ROLES = \"role\";\nconst FILTERS = \"filters\";\n\nexport class AWSProfileSection extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n    }\n\n    toggleLeftSide(){\n        this.context.dispatch(new SetViewSection({left:this.context.views.left === LOAD?SELECT:LOAD}));\n    }\n    toggleRightSide(){\n        this.context.dispatch(new SetViewSection({right:this.context.views.right === ROLES?FILTERS:ROLES}));\n    }\n\n    render(){\n        return (\n            <>\n                {\n                    this.context.profilesLoaded && (\n                        <div className=\"aws-section-button-container\">\n                            <Button onClick={this.toggleLeftSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn profile-load\">{this.context.views.left === SELECT?'Load Profiles':'Use Profiles'}</Button>\n                            <Button onClick={this.toggleRightSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn assume-role\">{this.context.views.right === FILTERS?'Assume Rule':'Log Filters'}</Button>\n                        </div>\n                    )\n                }\n                <Row>\n                    <Col className=\"p-0\">{this.context.views.left === SELECT?this.renderSelectProfile():this.renderLoadProfile()}</Col>\n                    {\n                        this.context.profilesLoaded && (\n                            <Col className=\"p-0\">{this.context.views.right === FILTERS?this.renderAWSFiltersSection():this.renderRoleSection()}</Col>\n                        )\n                    }\n                </Row>\n                {\n                    this.context.profilesLoaded && (\n                        <Row className=\"profile-display\">\n                            <Col md={6} ><LogGroupSelect profile={this.context.selectedProfile}></LogGroupSelect></Col>\n                        </Row>\n                    )\n                } \n            </>\n        );\n    }\n\n    loadedProfilesHandler(){\n        this.context.dispatch(new SetViewSection({left:\"select\"}));\n        this.context.dispatch(new AWSProfilesLoaded(true));\n    }\n\n    renderRoleSection(){\n        return (<div>Roles</div>)\n    }\n\n    renderAWSFiltersSection(){\n        return (<div>AWS LOG Filter Section</div>)\n    }\n\n    renderLoadProfile(){\n        return (\n            <Row className=\"profile-display\" ><Col md={12}><LoadAWSProfiles loadedHandler={this.loadedProfilesHandler.bind(this)}></LoadAWSProfiles></Col></Row>\n        )\n    }\n    renderSelectProfile(){\n        return (\n            <Row className=\"profile-display p-0\">\n                <Col md={6} >\n                    <SyncContext.Consumer>\n                        {ctx=>(<AWSProfileSelect profiles={ctx.aws}></AWSProfileSelect>)}\n                    </SyncContext.Consumer>\n                </Col>    \n                <Col md={6} ><AWSRegionSelect></AWSRegionSelect></Col>\n            </Row>\n        )\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport class  RegexFilterInput extends Component{\n    static contextType = GlobalContext\n\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    handleChange (event){\n        let reg = null;\n        \n        try{\n            reg = new RegExp(event.target.value.trim());\n        }catch(e){\n            console.error(\"should probably handle bad input here \",e);\n            this.setState({error:\"Invalid Regular Expression.\"});\n        }\n\n        if(reg){\n            this.setState({error:undefined});\n            this.context.dispatch(new SetRegexFilter(reg));\n        }\n    }\n    render(){\n        return (\n            <div {...this.props}>\n                {this.state.error && ( <div class=\"text-warning\">{this.state.error}</div>)}\n                <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={this.handleChange.bind(this)} placeholder=\"regex filter\" defaultValue={this.context.filters.regexFilter} ></FormControl>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Row, Col, Container,Form} from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  constructor(props){\n    super(props);\n    this.state= {showLine:true,showNumbers:true}\n  }\n\n  groupRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{Object.values(regexResponse.groups).map((groupVal)=>{return (<Col md={colWidth}>{groupVal}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  captureRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{regexResponse.splice(1,regexResponse.length).map((capt)=>{ return (<Col md={colWidth}>{capt}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  lineRender(line,regexResponse,colWidth){\n    return line;\n  }\n  showLineHandler(evt){\n    this.setState({...this.state,showLine:evt.target.checked})\n  }\n  showNumbersHandler(evt){\n    this.setState({...this.state,showNumbers:evt.target.checked})\n  }\n  render() {\n    let pageNo = this.context.pagination.page;\n    let size = this.context.pagination.pageSize;\n\n    let start = pageNo * size;\n    let end = start + size;\n    let grouped = false;\n    let headers = []; \n    let renderType = this.lineRender.bind(this);\n\n    let colWidth = \"auto\";\n\n    let pageRender = this.context.page\n    .filter((line,i )=> {\n      return this.context.index[i];\n    })\n    .slice(start,end)\n    .map((line, index) => {\n      let regexResponse = this.context.filters && this.context.filters.regexFilter && this.context.filters.regexFilter.exec(line);\n      if(index === 0 && regexResponse && regexResponse.length > 1){\n        grouped = true;\n        if(regexResponse.groups){\n          renderType = this.groupRender.bind(this);\n          headers = Object.keys(regexResponse.groups);\n          if(headers.length > 0){\n            colWidth = Math.max(Math.floor(12/headers.length),1);  \n          }\n        }else{\n          renderType = this.captureRender.bind(this);\n        }\n      }\n      \n      return (\n        <Row className=\"line-row\" key={index}>\n          { this.state.showNumbers && (<div className=\"num-col text-center\">{index}</div>)}  \n          <Col md={this.state.showNumbers?11:12} className=\"page-line\">{renderType(line,regexResponse,colWidth)}</Col>\n        </Row>\n      );\n    })\n\n\n    \n      \n       \n\n    return (\n      <Container fluid={true}>\n        <Row>\n          {pageRender.length > 0 && (<Form.Check inline label=\"numbers\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showNumbers} onChange={this.showNumbersHandler.bind(this)}/>)}\n          {\n            grouped && <Form.Check inline label=\"raw\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showLine} onChange={this.showLineHandler.bind(this)}/>\n          }  \n        </Row>      \n        {\n          headers.length > 0 && (\n          <Row>\n            <div className=\"num-col text-center\"></div>\n            <Col md={11} className=\"page-line\">\n              <Row >{headers.map((header)=>{ return (<Col md={colWidth}>{header}</Col>) })}</Row>\n            </Col>\n            \n          </Row>)\n        }\n        {pageRender}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n\n        // let pages = (this.context.pages / this.context.pageSize) + (this.context.pages % this.context.pageSize > 0)?1:0;\n        // let pageSize = this.context.pagination.pageSize;\n        \n\n        // console.log(this.context.pagination);\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n\n\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n\n  async fetchEvents() {\n    let { profile, logGroup } = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let logEvents = (await cloudWatchLogsService.getLogEvents({\n          logGroupName: logGroup,\n          logStreamNamePrefix: \"20\"\n        }))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n\n        this.context.dispatch(new SetPage(logEvents));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup } = this.props;\n    if (\n      profile &&\n      logGroup &&\n      (profile !== prevProps.profile || logGroup !== prevProps.logGroup)\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage } from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        })\n        this.processFile(selectedFile);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                        {\n                            this.state.files.map((file)=>{\n                                return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                            })\n                        } \n                    </FormControl> \n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    SetPagination\n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(){\n\n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.lines > pagination.pageSize){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                if((i+offset + 1) > 0){\n                    displayPages[i] = (i + offset + 1);\n                }\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            console.log(pagination,pages,offset, displayPages);\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={3}>\n                    <Container className=\"justify-content-end\">\n                    <Row >\n                        <Col><label className=\"col-form-label\">Page Size</label></Col>\n                        <Col><FormControl className=\"\" as=\"input\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl></Col>\n                    </Row>\n                    </Container>\n                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{return <></>}\n        \n    }\n\n}","import React,{Component} from \"react\";\nimport {SyncContext,InitSyncState} from \"../../context/sync-context\";\nimport {SyncData,AWSProfilesLoaded,SetViewSection} from \"../../actions/actions\";\n\nconst PUSH_EVENT_KEY = \"push_ss_file_filter\";\nconst PULL_EVENT_KEY = \"pull_ss_file_filter\";\n\nexport class SynchronizedContent extends Component{\n    static contextType = SyncContext;\n    constructor(props){\n        super(props);\n        this.lastEvent = InitSyncState;\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        let {aws} = this.context;\n        if(aws && JSON.stringify(this.lastEvent) !== JSON.stringify(aws)){\n            this.push(aws);         \n        } \n\n        let profilesLoaded = aws && Object.keys(aws).length > 0;\n        if(profilesLoaded && this.props.gctx.profilesLoaded !== profilesLoaded) {\n            window.setTimeout(()=>{ //doesnt like me doing dispatches in the same update loop. put the updates in the next one.\n                this.props.gctx.dispatch(new SetViewSection({left:\"select\"}));\n                this.props.gctx.dispatch(new AWSProfilesLoaded(profilesLoaded));\n            },0);\n        };\n    }\n\n    storageEventListener(event){\n        let lastEventString = (this.lastEvent && JSON.stringify(this.lastEvent)) || null;\n        \n        if(event.key !== PULL_EVENT_KEY && event.key !== PUSH_EVENT_KEY) return; //we dont care about other events.\n\n        let parsed = (event.newValue && JSON.parse(event.newValue)) || null;\n\n        if(!parsed) return; // do nothing if no value to work with\n        if (event.key == PULL_EVENT_KEY && lastEventString) {\n            this.push(this.lastEvent); //Another tab requested content\n        } else if (event.key == PUSH_EVENT_KEY && event.newValue !== lastEventString ) {\n            //received new data. update context.\n            this.lastEvent = parsed;\n            this.context.dispatch(new SyncData({aws:parsed}));              \n        }\n    }\n\n    componentWillMount(){\n        window.addEventListener('storage', this.storageEventListener.bind(this) , false);\n        \n        this.pull();\n    }\n\n    push(value){\n        this.lastEvent = value; \n        window.localStorage.setItem(PUSH_EVENT_KEY, JSON.stringify(value));\n        // the other tab should now have it, so we're done with it.\n        window.setTimeout(()=>{\n            window.localStorage.removeItem(PUSH_EVENT_KEY); // <- could do short timeout as well.\n        },10);\n    }\n\n    pull(){   \n        window.localStorage.setItem(PULL_EVENT_KEY,\"{}\");\n        window.localStorage.removeItem(PULL_EVENT_KEY);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('storage', this.storageEventListener.bind(this) , false);\n    }\n    render(){    \n        return (<></>)\n    }\n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {SyncState,SyncContext} from \"./context/sync-context\";\nimport {AWSProfileSection} from \"./components/aws/AWSProfileSection\"\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\nimport {SynchronizedContent} from \"./components/sync/synchronized-content\";\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <SyncState>\n        <GlobalContext.Consumer>\n          {gCtx => ( <SynchronizedContent gctx={gCtx}></SynchronizedContent>)}\n        </GlobalContext.Consumer>\n          \n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSProfileSection></AWSProfileSection>\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <div className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && (<Filter></Filter>)\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  <SyncContext.Consumer>\n                    {\n                      aCtx =>( \n                        aCtx.profilesLoaded && aCtx.selectedProfile && \n                        (\n                          <GlobalContext.Consumer>\n                            {gCtx => ( gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (<LogEvents profile={aCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName}></LogEvents> ))}\n                          </GlobalContext.Consumer>\n                        ) \n                      )\n                    }\n                  </SyncContext.Consumer>\n                )\n              }\n              \n              \n            </div>\n            <footer ></footer>\n          </div>\n        </SyncState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}