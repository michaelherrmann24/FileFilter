{"version":3,"sources":["context/global-context.js","context/sync-context.js","actions/actions.js","components/aws/AWSProfileSelect.js","components/aws/AWSRegionSelect.js","service/log-event-service.js","components/log-group/log-group-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","components/aws/AWSProfileSection.js","components/filter-input/filter-input.js","components/scroll-to.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","components/sync/synchronized-content.js","components/scrollable.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","tail","pagination","pageSize","selectedProfile","options","credentials","profilesLoaded","regions","us-east-2","us-east-1","us-west-1","us-west-2","ap-east-1","ap-south-1","ap-northeast-3","ap-northeast-2","ap-southeast-1","ap-southeast-2","ap-northeast-1","ca-central-1","cn-north-1","cn-northwest-1","eu-west-1","eu-west-2","eu-west-3","eu-north-1","sa-east-1","us-gov-east-1","us-gov-west-1","views","right","left","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitSyncState","aws","SyncContext","SyncState","AddLogGroups","classCallCheck","this","createClass","key","console","log","SelectLogGroup","SetPage","SetTail","SetIndex","SetRegexFilter","regexFilter","SetAWSProfile","profile","defineProperty","AWSProfilesLoaded","AWSSelectProfile","SetViewSection","SetPagination","SyncData","SetLogEventFilters","logEventFilters","AWSProfileSelect","_Component","_this","profiles","rest","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","filter","_ref2","_ref3","target","map","_ref4","_ref5","currentValue","context","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref6","_ref7","title","Component","contextType","AWSRegionSelect","apply","arguments","region","selectedRegion","es_FormControl","changeHandler","CloudWatchLogsService","secret","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","describeLogGroups","err","resp","stop","_getLogEvents","_callee2","logEvents","results","opt","_context2","getEvents","sent","concat","events","nextToken","assign","t0","_x","_getEvents","_callee3","_this2","_context3","filterLogEvents","_x2","LogGroupSelect","props","undefined","aws_access_key_id","aws_secret_access_key","fetchLogGroups","_fetchLogGroups","cloudWatchLogsService","getLogGroups","selectLogGroup","lg","logGroupName","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","readDirectory","Symbol","iterator","done","isDirectory","traverseDirectory","return","finish","createReader","readEntries","_handleDrop","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","dataTransfer","items","webkitGetAsEntry","handleDrop","error","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","loadedHandler","_processFile","fileEntry","baseProfile","actionValue","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","responses","_this3","processFile","all","file_drop_FileDrop","PERIOD_CHANGE_OPTIONS","Date","setMonths","getMonths","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","AWSProfileSection","periodFn","timeValue","Button","onClick","toggleLeftSide","variant","toggleRightSide","Row","Col","renderSelectProfile","renderLoadProfile","renderAWSFiltersSection","renderRoleSection","md","log_group_select_LogGroupSelect","evt","startTime","fn","type","placeholder","handleTimeChange","handlePeriodChange","AWSConfigFileDrop_LoadAWSProfiles","loadedProfilesHandler","Consumer","ctx","AWSProfileSelect_AWSProfileSelect","AWSRegionSelect_AWSRegionSelect","RegexFilterInput","reg","RegExp","class","handleChange","ScrollTo","scrollable","scrollRef","scrollTo","window","offsetTop","height","Page","showLine","showNumbers","regexResponse","colWidth","values","groups","groupVal","lineRender","splice","capt","checked","pageNo","size","start","end","grouped","headers","renderType","pageRender","slice","groupRender","keys","Math","max","floor","captureRender","Container","fluid","Form","Check","inline","label","id","showNumbersHandler","showLineHandler","header","Filter","prevProps","prevState","snapshots","reindex","test","lines","iVal","newPages","ceil","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","getLogEvents","logEvent","message","fetchEvents","_this$props2","filter_Filter","FileInput","_processFileDelta","_x3","_x4","filArr","selectedFile","_x5","fullPath","cur","fileSize","intervalId","clearInterval","setInterval","tailFile","processFileDelta","pages","selectFile","toggleTail","Paging","nextPage","offset","displayPages","nextpage","prevPage","Pagination","First","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","SynchronizedContent","lastEvent","JSON","stringify","gctx","setTimeout","lastEventString","parsed","newValue","parse","storageEventListener","pull","localStorage","setItem","removeItem","Scrollable","scroll_to_ScrollTo","App","selectedTab","keyEvent","global_context_GlobalState","sync_context_SyncState","gCtx","synchronized_content_SynchronizedContent","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","AWSProfileSection_AWSProfileSection","filter_input_RegexFilterInput","pagination_Paging","scrollable_Scrollable","log_events_LogEvents","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98355cc2.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    tail:false,\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n    selectedProfile:{\n      options:{},\n      credentials:{}\n    },\n    profilesLoaded:false,\n    regions:{\n      \"us-east-2\" : \"US East (Ohio)\",\n      \"us-east-1\" : \"US East (N. Virginia)\",\n      \"us-west-1\" : \"US West (N. California)\",\n      \"us-west-2\" : \"US West (Oregon)\",\n      \"ap-east-1\" : \"Asia Pacific (Hong Kong)\",\n      \"ap-south-1\" : \"Asia Pacific (Mumbai)\",\n      \"ap-northeast-3\" : \"Asia Pacific (Osaka-Local)\",\n      \"ap-northeast-2\" : \"Asia Pacific (Seoul)\",\n      \"ap-southeast-1\" : \"Asia Pacific (Singapore)\",\n      \"ap-southeast-2\" : \"Asia Pacific (Sydney)\",\n      \"ap-northeast-1\" : \"Asia Pacific (Tokyo)\",\n      \"ca-central-1\" : \"Canada (Central)\",\n      \"cn-north-1\" : \"China (Beijing)\",\n      \"cn-northwest-1\" : \"China (Ningxia)\",\n      \"eu-west-1\" : \"EU (Ireland)\",\n      \"eu-west-2\" : \"EU (London)\",\n      \"eu-west-3\" : \"EU (Paris)\",\n      \"eu-north-1\" : \"EU (Stockholm)\",\n      \"sa-east-1\" : \"South America (São Paulo)\",\n      \"us-gov-east-1\" : \"AWS GovCloud (US-East)\",\t\n      \"us-gov-west-1\" : \"AWS GovCloud (US)\"\t\t\n    },\n    views:{\n      right:\"filters\",\n      left:\"load\"\n    }\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitSyncState = {\n    aws:{\n        \n    }\n};\n\nexport const SyncContext = createContext(InitSyncState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const SyncState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitSyncState);\n\n    return (\n      <SyncContext.Provider value={{...state, dispatch}}>\n        {children}\n      </SyncContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AddLogGroups\",this.value);\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SelectLogGroup\",this.value);\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPage\",this.value);\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\n\nexport class SetTail{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetTail\",this.value);\n        return {\n            ...state,\n            tail:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetIndex\",this.value);\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetRegexFilter\",this.value);\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].options),\n                        ...(this.value && this.value.options)\n                    },\n                    credentials:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].credentials),\n                        ...(this.value && this.value.credentials)\n                    }\n                }\n            }\n        };\n\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSSelectProfile\",this.value);\n        return {\n            ...state,\n            selectedProfile:{\n                ...state.selectedProfile,\n                options:{\n                   ...state.selectedProfile.options,\n                    ...this.value.options\n                },\n                credentials:{\n                    ...state.selectedProfile.credentials,\n                    ...this.value.credentials\n                }\n            }\n        }\n    }\n}\nexport class SetViewSection{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetViewSection\",this.value);\n        return {\n            ...state,\n            views:{\n                ...state.views,\n                ...this.value\n            }\n        }\n    }\n}\nexport class SetPagination{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPagination\",this.value);\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\nexport class SyncData{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SyncData\",this.value);\n        return {\n            ...this.value\n        }\n    }\n}\n\nexport class SetLogEventFilters{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetFilterStartTime\",this.value);\n        return {\n            ...state,\n            logEventFilters:{\n                ...state.logEventFilters,\n                ...this.value\n            }\n        }\n    }\n}","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {GlobalContext} from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./AWSProfileSelect.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profiles,rest}) {\n        super({...profiles,...rest});\n        this.state = {profiles:profiles} || {profiles:{}};\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.state.profiles).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        console.log(\"selectedProfileEntry\",selectedProfileEntry);\n        if(selectedProfileEntry && this.context.profilesLoaded){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n       this.context.dispatch(new AWSSelectProfile(this.state.profiles['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profile</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.state.profiles).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n// import {SetAWSCredential,SetAWSOptions, SetAWSProfile,A\n\nconst DEFAULT_REGION = \"ap-southeast-2\";\nexport class AWSRegionSelect extends Component{\n    static contextType = GlobalContext;\n\n    changeHandler(event){\n        this.context.dispatch(new AWSSelectProfile({options:{region:event.target.value}}));\n    }\n\n    render(){\n        let selectedRegion =  this.context.selectedProfile && this.context.selectedProfile.options && this.context.selectedProfile.options.region || DEFAULT_REGION\n\n        return (\n            <>\n                <label>Region</label>\n                <FormControl as=\"select\" onChange={this.changeHandler.bind(this)} defaultValue={selectedRegion}>\n                    {   Object.entries(this.context.regions).map( ([key,value])=>{\n                            return (\n                                    <option key={key} value={key}>{value}</option>\n                                )   \n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    \n    }\n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    console.log(resp);\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        let logEvents = [];\n        try{\n            let results = await this.getEvents(options);\n            logEvents = logEvents.concat(results.events);\n            while(results.nextToken){\n                let opt = Object.assign({nextToken:results.nextToken},options);\n                results = await this.getEvents(opt);\n                logEvents = logEvents.concat(results.events);\n            }\n        }catch(e){\n            throw e;\n        }\n        return logEvents;\n    }\n\n    async getEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp);\n                }\n            });\n        });\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.region = undefined;\n        this.key = undefined;\n        this.secret = undefined;\n    };\n\n    componentDidUpdate() {\n        \n        let profile = this.context.selectedProfile;\n\n        let region = (profile && profile.options && profile.options.region) || this.region;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || this.key;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || this.secret;\n\n        if(this.region !== region || this.key !== key || this.secret !== secret){\n            \n            this.region = region;\n            this.key = key;\n            this.secret = secret; \n\n            this.fetchLogGroups();   \n        }\n        \n    } \n\n    async fetchLogGroups(){\n        if(this.key && this.secret && this.region){\n            let cloudWatchLogsService = new CloudWatchLogsService(this.key,this.secret,this.region);\n            try {\n                let logGroups =  await cloudWatchLogsService.getLogGroups();\n                this.context.dispatch(new AddLogGroups(logGroups));\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    componentDidMount(){\n        let profile = this.context.selectedProfile;\n\n        this.region = (profile && profile.options && profile.options.region) || null;\n        this.key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        this.secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null;\n\n        this.fetchLogGroups(profile);\n    }\n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n\n      let entry  = item.webkitGetAsEntry();\n\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { SyncContext } from \"../../context/sync-context\";\nimport {SetAWSProfile} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;       \n\nexport class LoadAWSProfiles extends Component{\n    static contextType = SyncContext;\n\n    constructor({loadedHandler,rest}){\n        super(rest);\n        this.profilesLoaded = loadedHandler;\n        this.profiles = {};\n    }\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n\n            let baseProfile = {credentials:{},options:{}}\n            let actionValue = (fileEntry.name === 'credentials')? baseProfile.credentials:baseProfile.options;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    actionValue[keyVal[1].trim()] = keyVal[2].trim();                                \n                }\n\n                this.profiles[currentProfile] = {\n                    options:{\n                        ...(this.profiles[currentProfile] && this.profiles[currentProfile].options),\n                        ...baseProfile.options\n                    },\n                    credentials:{\n                        ...(this.profiles[currentProfile] && this.profiles[currentProfile].credentials),\n                        ...baseProfile.credentials\n                    }\n                }\n\n            });\n\n\n            \n        }\n        \n       \n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);   \n                if(this.profilesLoaded){\n                    Object.entries(this.profiles).forEach(([key,value])=>{\n                        this.context.dispatch(new SetAWSProfile(key,value));\n                    });\n                    this.profilesLoaded();\n                }\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import React,{Component} from \"react\";\nimport {Row,Col, Button} from 'react-bootstrap';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SyncContext} from \"../../context/sync-context\";\nimport {AWSProfileSelect} from \"./AWSProfileSelect\";\nimport {AWSRegionSelect} from \"./AWSRegionSelect\";\nimport {LogGroupSelect} from \"../log-group/log-group-select\";\nimport {LoadAWSProfiles} from \"./AWSConfigFileDrop\";\nimport {SetViewSection,AWSProfilesLoaded,SetLogEventFilters} from \"../../actions/actions\";\nimport \"./AWSProfileSection.css\";\n\n\nconst LOAD = \"load\";\nconst SELECT = \"select\";\nconst ROLES = \"role\";\nconst FILTERS = \"filters\";\n\n\nconst PERIOD_CHANGE_OPTIONS =[\n    ()=>0,\n    (value)=>new Date().setMonths(new Date().getMonths() - value),\n    (value)=>new Date().setDate(new Date().getDate() - (7 * value)),\n    (value)=>new Date().setDate(new Date().getDate() - value),\n    (value)=>new Date().setHours(new Date().getHours() - value),\n    (value)=>new Date().setMinutes(new Date().getMinutes() - value),\n    (value)=>new Date().setSeconds(new Date().getSeconds() - value)\n];\n\nexport class AWSProfileSection extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            periodFn : PERIOD_CHANGE_OPTIONS[0],\n            timeValue : 0\n        }\n    }\n\n    toggleLeftSide(){\n        this.context.dispatch(new SetViewSection({left:this.context.views.left === LOAD?SELECT:LOAD}));\n    }\n    toggleRightSide(){\n        this.context.dispatch(new SetViewSection({right:this.context.views.right === ROLES?FILTERS:ROLES}));\n    }\n\n    render(){\n        return (\n            <>\n                {\n                    this.context.profilesLoaded && (\n                        <div className=\"aws-section-button-container\">\n                            <Button onClick={this.toggleLeftSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn profile-load\">{this.context.views.left === SELECT?'Load Profiles':'Use Profiles'}</Button>\n                            <Button onClick={this.toggleRightSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn assume-role\">{this.context.views.right === FILTERS?'Assume Rule':'Log Filters'}</Button>\n                        </div>\n                    )\n                }\n                <Row>\n                    <Col className=\"p-0\">{this.context.views.left === SELECT?this.renderSelectProfile():this.renderLoadProfile()}</Col>\n                    {\n                        this.context.profilesLoaded && (\n                            <Col className=\"p-0\">{this.context.views.right === FILTERS?this.renderAWSFiltersSection():this.renderRoleSection()}</Col>\n                        )\n                    }\n                </Row>\n                {\n                    this.context.profilesLoaded && (\n                        <Row className=\"profile-display\">\n                            <Col md={6} ><LogGroupSelect profile={this.context.selectedProfile}></LogGroupSelect></Col>\n                        </Row>\n                    )\n                } \n            </>\n        );\n    }\n\n    loadedProfilesHandler(){\n        this.context.dispatch(new SetViewSection({left:\"select\"}));\n        this.context.dispatch(new AWSProfilesLoaded(true));\n    }\n\n    handleTimeChange(evt){\n        this.setState({timeValue : evt.target.value});\n        this.context.dispatch(new SetLogEventFilters({startTime:this.state.periodFn(evt.target.value)}));\n    }\n    handlePeriodChange(evt){\n        let fn = PERIOD_CHANGE_OPTIONS[evt.target.value]\n        this.setState({periodFn : fn});\n        this.context.dispatch(new SetLogEventFilters({startTime:fn(this.state.timeValue)}));\n    }\n\n    renderRoleSection(){\n        return (<div>Roles</div>)\n    }\n\n    renderAWSFiltersSection(){\n        return (<div>\n            <Row className=\"p-0\">\n                <Col>\n                <label>Filter Start Time</label>\n                <div className=\"form-inline\">\n                <input className=\"form-control\" type=\"number\" placeholder=\"num\" onChange={this.handleTimeChange.bind(this)}/>\n                <select className=\"form-control\" onChange={this.handlePeriodChange.bind(this)}>\n                    <option value={0}>All time</option>\n                    <option value={1}>Months</option>\n                    <option value={2}>Weeks</option>\n                    <option value={3}>Days</option>\n                    <option value={4}>Hours</option>\n                    <option value={5}>Mins</option>\n                    <option value={6}>Seconds</option>\n                </select>\n                </div>\n                </Col>\n            </Row>\n        </div>\n        )\n    }\n\n    renderLoadProfile(){\n        return (\n            <Row className=\"profile-display\" ><Col md={12}><LoadAWSProfiles loadedHandler={this.loadedProfilesHandler.bind(this)}></LoadAWSProfiles></Col></Row>\n        )\n    }\n    renderSelectProfile(){\n        return (\n            <Row className=\"profile-display p-0\">\n                <Col md={6} >\n                    <SyncContext.Consumer>\n                        {ctx=>(<AWSProfileSelect profiles={ctx.aws}></AWSProfileSelect>)}\n                    </SyncContext.Consumer>\n                </Col>    \n                <Col md={6} ><AWSRegionSelect></AWSRegionSelect></Col>\n            </Row>\n        )\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport class  RegexFilterInput extends Component{\n    static contextType = GlobalContext\n\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    handleChange (event){\n        let reg = null;\n        \n        try{\n            reg = new RegExp(event.target.value.trim());\n        }catch(e){\n            console.error(\"should probably handle bad input here \",e);\n            this.setState({error:\"Invalid Regular Expression.\"});\n        }\n\n        if(reg){\n            this.setState({error:undefined});\n            this.context.dispatch(new SetRegexFilter(reg));\n        }\n    }\n    render(){\n        return (\n            <div {...this.props}>\n                {this.state.error && ( <div class=\"text-warning\">{this.state.error}</div>)}\n                <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={this.handleChange.bind(this)} placeholder=\"regex filter\" defaultValue={this.context.filters.regexFilter} ></FormControl>\n            </div>\n        )\n    }\n}","import React,{Component} from \"react\";\nimport {GlobalContext} from \"../context/global-context\";\n\nexport class ScrollTo extends Component {\n    static contextType = GlobalContext;\n    constructor(props) {\n        super(props)\n        this.scrollable = props.scrollable;\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n    componentDidUpdate(){\n        this.context.tail && this.scrollTo();\n    }\n    scrollTo(){\n        let scrollable =  (this.scrollable && this.scrollable.current) || window\n        this.scrollRef && scrollable.scrollTo(0, this.scrollRef.current.offsetTop); // run this method to execute scrolling. \n\n    }\n\n    render() {\n        return <div style={{height:\"1px\"}} ref={this.scrollRef} ></div> \n    }   // attach the ref property to a dom element\n  \n}","import React, { Component } from \"react\";\nimport { Row, Col, Container,Form} from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\nimport {ScrollTo} from \"../scroll-to\";\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  constructor(props){\n    super(props);\n    this.state= {showLine:true,showNumbers:true}\n  }\n\n  groupRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{Object.values(regexResponse.groups).map((groupVal)=>{return (<Col md={colWidth}>{groupVal}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  captureRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{regexResponse.splice(1,regexResponse.length).map((capt)=>{ return (<Col md={colWidth}>{capt}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  lineRender(line,regexResponse,colWidth){\n    return line;\n  }\n  showLineHandler(evt){\n    this.setState({...this.state,showLine:evt.target.checked})\n  }\n  showNumbersHandler(evt){\n    this.setState({...this.state,showNumbers:evt.target.checked})\n  }\n  render() {\n    let pageNo = this.context.pagination.page;\n    let size = this.context.pagination.pageSize;\n\n    let start = pageNo * size;\n    let end = start + size;\n    let grouped = false;\n    let headers = []; \n    let renderType = this.lineRender.bind(this);\n\n    let colWidth = \"auto\";\n\n    let pageRender = this.context.page\n    .filter((line,i )=> {\n      return this.context.index[i];\n    })\n    .slice(start,end)\n    .map((line, index) => {\n      let regexResponse = this.context.filters && this.context.filters.regexFilter && this.context.filters.regexFilter.exec(line);\n      if(index === 0 && regexResponse && regexResponse.length > 1){\n        grouped = true;\n        if(regexResponse.groups){\n          renderType = this.groupRender.bind(this);\n          headers = Object.keys(regexResponse.groups);\n          if(headers.length > 0){\n            colWidth = Math.max(Math.floor(12/headers.length),1);  \n          }\n        }else{\n          renderType = this.captureRender.bind(this);\n        }\n      }\n      \n      return (\n        <Row className=\"line-row\" key={index}>\n          { this.state.showNumbers && (<div className=\"num-col text-center\">{start + index + 1}</div>)}  \n          <Col md={this.state.showNumbers?11:12} className=\"page-line\">{renderType(line,regexResponse,colWidth)}</Col>\n        </Row>\n      );\n    })\n\n    return (\n      <Container fluid={true}>\n        <Row>\n          {pageRender.length > 0 && (<Form.Check inline label=\"numbers\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showNumbers} onChange={this.showNumbersHandler.bind(this)}/>)}\n          {\n            grouped && <Form.Check inline label=\"raw\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showLine} onChange={this.showLineHandler.bind(this)}/>\n          }  \n        </Row>      \n        {\n          headers.length > 0 && (\n          <Row>\n            <div className=\"num-col text-center\"></div>\n            <Col md={11} className=\"page-line\">\n              <Row >{headers.map((header)=>{ return (<Col md={colWidth}>{header}</Col>) })}</Row>\n            </Col>\n            \n          </Row>)\n        }\n        {pageRender}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            let pagination = this.context.pagination;\n            let page = pagination.page;\n            if(lines){\n                let newPages = Math.ceil(lines / pagination.pageSize);\n                if(pagination.page > newPages){\n                  page = newPages; \n                }\n            }else{\n                page = 0;\n            }\n\n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length,page:page}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n\n        // let pages = (this.context.pages / this.context.pageSize) + (this.context.pages % this.context.pageSize > 0)?1:0;\n        // let pageSize = this.context.pagination.pageSize;\n        \n\n        // console.log(this.context.pagination);\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n\n\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n  async fetchEvents() {\n    let { profile, logGroup , filters} = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let options = {\n          logGroupName: logGroup\n        };\n        console.log(\"filters\", filters, this.context);\n        if(filters){\n          options.startTime = filters.startTime;\n        }\n\n        let logEvents = (await cloudWatchLogsService.getLogEvents(options))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n        this.context.dispatch(new SetPage(logEvents));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup, filters} = this.props;\n    if (\n      profile &&\n      logGroup &&\n      (profile !== prevProps.profile || logGroup !== prevProps.logGroup || filters != prevProps.filters)\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl,Form,Col,Row} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage,SetTail,SetPagination} from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async processFileDelta(fileEntry,start,end){\n        let reader = FileReaderService.getInstance();\n        let file = (await new Promise((resolve,reject)=>fileEntry.file(resolve,reject))).slice(start,end);\n        let content = await reader.readFile(file);\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(this.context.page.concat(lines)));\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr,selectedFile:filArr[0]});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        });\n        this.setState({selectedFile:selectedFile});\n        this.processFile(selectedFile); //set the file as selected. \n\n    }\n\n    tailFile(fileEntry){\n        \n        fileEntry.file((file,err)=>{\n            if(this.state.fileSize !== file.size){\n                this.setState({fileSize:file.size});\n            }\n        });\n    }\n\n    toggleTail(event){\n       this.context.dispatch(new SetTail(event.target[\"checked\"])); \n    }\n\n    componentDidUpdate(prevProps,prevState){\n\n\n\n        if(this.state.tail && this.state.selectedFile && \n                !(prevState && prevState.tail && prevState.selectedFile && prevState.selectedFile === this.state.selectedFile)\n            ){\n            let intervalId = window.setInterval(this.tailFile.bind(this),500,this.state.selectedFile);\n            this.setState({intervalId:intervalId});   \n        }else if(!this.context.tail){    \n            this.state.intervalId && window.clearInterval(this.state.intervalId);\n        }\n\n\n        if(prevState.fileSize && prevState.fileSize !== this.state.fileSize){\n\n            if(prevState.fileSize < this.state.fileSize){\n                this.processFileDelta(this.state.selectedFile,prevState.fileSize,this.state.fileSize);\n            }else{\n                this.processFile(this.state.selectedFile);\n            }\n            \n            //read the file dif;\n        }\n\n        let pagination = this.context.pagination;\n\n        if(pagination.lines && this.context.tail){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n            if(pagination.page !== pages-1){\n                this.context.dispatch(new SetPagination({page:(pages-1)}));\n            }\n        }\n\n        this.context.tail !== this.state.tail && this.setState({tail:this.context.tail});\n    }\n\n    \n    componentWillUnmount(){\n        this.state.intervalId && window.clearInterval(this.state.intervalId);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <Row>\n                        <Col md={11}>\n                            <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                                {\n                                    this.state.files.map((file)=>{\n                                        return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                                    })\n                                } \n                            </FormControl> \n                        </Col>\n                        <Col md={1}><Form.Check type=\"checkbox\" label=\"tail\" onChange={this.toggleTail.bind(this)} checked={this.context.tail || false}/></Col> \n                    </Row>\n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination,SetTail} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    \n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetTail(false));\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(evt){\n\n        this.context.dispatch(new SetPagination({pageSize:(evt.target.value)}));\n\n\n    }\n\n    componentDidUpdate(){\n       \n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.pageSize && pagination.pageSize > 0){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                if((i+offset + 1) > 0){\n                    displayPages[i] = (i + offset + 1);\n                }\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={1}><label>Page Size</label></Col>\n                <Col md={2}>  \n                    <FormControl className=\"\" as=\"input\" size=\"sm\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl>                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{\n            return (\n                <Row>\n                    <Col md={9}></Col>\n                    <Col md={1}><label>Page Size</label></Col>\n                    <Col md={2}>  \n                        <FormControl className=\"\" as=\"input\" size=\"sm\" type=\"number\" value={pagination.pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl>                    \n                    </Col>\n                </Row>\n            )\n        }\n        \n    }\n\n}","import React,{Component} from \"react\";\nimport {SyncContext,InitSyncState} from \"../../context/sync-context\";\nimport {SyncData,AWSProfilesLoaded,SetViewSection} from \"../../actions/actions\";\n\nconst PUSH_EVENT_KEY = \"push_ss_file_filter\";\nconst PULL_EVENT_KEY = \"pull_ss_file_filter\";\n\nexport class SynchronizedContent extends Component{\n    static contextType = SyncContext;\n    constructor(props){\n        super(props);\n        this.lastEvent = InitSyncState;\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        let {aws} = this.context;\n        if(aws && JSON.stringify(this.lastEvent) !== JSON.stringify(aws)){\n            console.log(\"SYNC AWS\", aws);\n            this.push(aws);         \n        } \n\n        let profilesLoaded = aws && Object.keys(aws).length > 0;\n       \n        if(profilesLoaded && this.props.gctx.profilesLoaded !== profilesLoaded) {\n            window.setTimeout(()=>{ //doesnt like me doing dispatches in the same update loop. put the updates in the next one.\n                this.props.gctx.dispatch(new SetViewSection({left:\"select\"}));\n                this.props.gctx.dispatch(new AWSProfilesLoaded(profilesLoaded));\n            },0);\n        };\n    }\n\n    storageEventListener(event){\n        let lastEventString = (this.lastEvent && JSON.stringify(this.lastEvent)) || null;\n        \n        if(event.key !== PULL_EVENT_KEY && event.key !== PUSH_EVENT_KEY) return; //we dont care about other events.\n\n        let parsed = (event.newValue && JSON.parse(event.newValue)) || null;\n\n        if(!parsed) return; // do nothing if no value to work with\n        if (event.key == PULL_EVENT_KEY && lastEventString) {\n            this.push(this.lastEvent); //Another tab requested content\n        } else if (event.key == PUSH_EVENT_KEY && event.newValue !== lastEventString ) {\n            //received new data. update context.\n            this.lastEvent = parsed;\n            this.context.dispatch(new SyncData({aws:parsed}));              \n        }\n    }\n\n    componentWillMount(){\n        window.addEventListener('storage', this.storageEventListener.bind(this) , false);\n        \n        this.pull();\n    }\n\n    push(value){\n        this.lastEvent = value; \n        window.localStorage.setItem(PUSH_EVENT_KEY, JSON.stringify(value));\n        // the other tab should now have it, so we're done with it.\n        window.setTimeout(()=>{\n            window.localStorage.removeItem(PUSH_EVENT_KEY); // <- could do short timeout as well.\n        },10);\n    }\n\n    pull(){   \n        window.localStorage.setItem(PULL_EVENT_KEY,\"{}\");\n        window.localStorage.removeItem(PULL_EVENT_KEY);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('storage', this.storageEventListener.bind(this) , false);\n    }\n    render(){    \n        return (<></>)\n    }\n}","import React,{Component} from \"react\";\nimport {ScrollTo} from \"./scroll-to\";\n\nexport class Scrollable extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n   \n\n    render() {\n        return (\n            <div ref={this.scrollRef} {...this.props}>\n                {this.props.children}\n                <ScrollTo scrollable={this.scrollRef}></ScrollTo>\n            </div>\n        ) \n    }   // attach the ref property to a dom element\n  \n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {SyncState,SyncContext} from \"./context/sync-context\";\nimport {AWSProfileSection} from \"./components/aws/AWSProfileSection\"\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\nimport {SynchronizedContent} from \"./components/sync/synchronized-content\";\nimport {Scrollable} from \"./components/scrollable\";\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <SyncState>\n        <GlobalContext.Consumer>\n          {gCtx => ( <SynchronizedContent gctx={gCtx}></SynchronizedContent>)}\n        </GlobalContext.Consumer>\n          \n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSProfileSection></AWSProfileSection>\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <Scrollable className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && (<Filter></Filter>)\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  \n                  <GlobalContext.Consumer>\n                    {gCtx => ( gCtx.profilesLoaded && gCtx.selectedProfile &&  gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (\n                  \n                        <LogEvents profile={gCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName} filters={gCtx.logEventFilters}></LogEvents>\n                        \n                      ))}\n                  </GlobalContext.Consumer>\n                  \n                )\n              }\n              \n              \n              </Scrollable>\n            <footer ></footer>\n          </div>\n        </SyncState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}