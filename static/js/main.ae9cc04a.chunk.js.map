{"version":3,"sources":["context/global-context.js","context/sync-context.js","actions/actions.js","components/aws/AWSProfileSelect.js","components/aws/AWSRegionSelect.js","service/log-event-service.js","components/log-group/log-group-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","components/aws/AWSProfileSection.js","components/filter-input/filter-input.js","components/scroll-to.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","components/sync/synchronized-content.js","components/scrollable.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","tail","pagination","pageSize","selectedProfile","options","credentials","profilesLoaded","regions","us-east-2","us-east-1","us-west-1","us-west-2","ap-east-1","ap-south-1","ap-northeast-3","ap-northeast-2","ap-southeast-1","ap-southeast-2","ap-northeast-1","ca-central-1","cn-north-1","cn-northwest-1","eu-west-1","eu-west-2","eu-west-3","eu-north-1","sa-east-1","us-gov-east-1","us-gov-west-1","views","right","left","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitSyncState","aws","SyncContext","SyncState","AddLogGroups","classCallCheck","this","createClass","key","console","log","SelectLogGroup","SetPage","SetTail","SetIndex","SetRegexFilter","regexFilter","SetAWSProfile","profile","results","defineProperty","AWSProfilesLoaded","AWSSelectProfile","SetViewSection","SetPagination","SyncData","AWSProfileSelect","_Component","_this","profiles","rest","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","filter","_ref2","_ref3","target","map","_ref4","_ref5","currentValue","context","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref6","_ref7","title","Component","contextType","AWSRegionSelect","apply","arguments","region","selectedRegion","es_FormControl","changeHandler","CloudWatchLogsService","secret","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","describeLogGroups","err","resp","stop","_getLogEvents","_callee2","_this2","_context2","filterLogEvents","events","_x","LogGroupSelect","prevProps","prevState","props","prevprofile","aws_access_key_id","aws_secret_access_key","prevregion","prevkey","prevsecret","fetchLogGroups","_fetchLogGroups","cloudWatchLogsService","getLogGroups","sent","t0","selectLogGroup","lg","logGroupName","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","readDirectory","undefined","Symbol","iterator","done","isDirectory","traverseDirectory","concat","return","finish","createReader","readEntries","_handleDrop","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","dataTransfer","items","webkitGetAsEntry","handleDrop","error","_x2","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","loadedHandler","_processFile","fileEntry","baseProfile","actionValue","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","responses","processFile","all","file_drop_FileDrop","AWSProfileSection","Button","onClick","toggleLeftSide","variant","toggleRightSide","Row","Col","renderSelectProfile","renderLoadProfile","renderAWSFiltersSection","renderRoleSection","md","log_group_select_LogGroupSelect","AWSConfigFileDrop_LoadAWSProfiles","loadedProfilesHandler","Consumer","ctx","AWSProfileSelect_AWSProfileSelect","AWSRegionSelect_AWSRegionSelect","RegexFilterInput","reg","RegExp","class","type","handleChange","placeholder","ScrollTo","scrollable","scrollRef","scrollTo","window","offsetTop","height","Page","showLine","showNumbers","regexResponse","colWidth","values","groups","groupVal","lineRender","splice","capt","evt","checked","pageNo","size","start","end","grouped","headers","renderType","pageRender","slice","groupRender","keys","Math","max","floor","captureRender","Container","fluid","Form","Check","inline","label","id","showNumbersHandler","showLineHandler","header","Filter","snapshots","reindex","test","lines","iVal","newPages","ceil","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","logEvents","getLogEvents","logStreamNamePrefix","logEvent","message","fetchEvents","_this$props2","filter_Filter","FileInput","_processFileDelta","_x3","_x4","_callee3","filArr","_context3","selectedFile","_x5","fullPath","cur","fileSize","pages","intervalId","clearInterval","setInterval","tailFile","processFileDelta","selectFile","toggleTail","Paging","nextPage","offset","displayPages","nextpage","prevPage","Pagination","First","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","SynchronizedContent","lastEvent","JSON","stringify","gctx","setTimeout","lastEventString","parsed","newValue","parse","storageEventListener","pull","localStorage","setItem","removeItem","Scrollable","assign","scroll_to_ScrollTo","App","selectedTab","keyEvent","global_context_GlobalState","sync_context_SyncState","gCtx","synchronized_content_SynchronizedContent","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","AWSProfileSection_AWSProfileSection","filter_input_RegexFilterInput","pagination_Paging","scrollable_Scrollable","aCtx","log_events_LogEvents","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae9cc04a.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    tail:false,\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n    selectedProfile:{\n      options:{},\n      credentials:{}\n    },\n    profilesLoaded:false,\n    regions:{\n      \"us-east-2\" : \"US East (Ohio)\",\n      \"us-east-1\" : \"US East (N. Virginia)\",\n      \"us-west-1\" : \"US West (N. California)\",\n      \"us-west-2\" : \"US West (Oregon)\",\n      \"ap-east-1\" : \"Asia Pacific (Hong Kong)\",\n      \"ap-south-1\" : \"Asia Pacific (Mumbai)\",\n      \"ap-northeast-3\" : \"Asia Pacific (Osaka-Local)\",\n      \"ap-northeast-2\" : \"Asia Pacific (Seoul)\",\n      \"ap-southeast-1\" : \"Asia Pacific (Singapore)\",\n      \"ap-southeast-2\" : \"Asia Pacific (Sydney)\",\n      \"ap-northeast-1\" : \"Asia Pacific (Tokyo)\",\n      \"ca-central-1\" : \"Canada (Central)\",\n      \"cn-north-1\" : \"China (Beijing)\",\n      \"cn-northwest-1\" : \"China (Ningxia)\",\n      \"eu-west-1\" : \"EU (Ireland)\",\n      \"eu-west-2\" : \"EU (London)\",\n      \"eu-west-3\" : \"EU (Paris)\",\n      \"eu-north-1\" : \"EU (Stockholm)\",\n      \"sa-east-1\" : \"South America (São Paulo)\",\n      \"us-gov-east-1\" : \"AWS GovCloud (US-East)\",\t\n      \"us-gov-west-1\" : \"AWS GovCloud (US)\"\t\t\n    },\n    views:{\n      right:\"filters\",\n      left:\"load\"\n    }\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitSyncState = {\n    aws:{\n        \n    }\n};\n\nexport const SyncContext = createContext(InitSyncState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const SyncState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitSyncState);\n\n    return (\n      <SyncContext.Provider value={{...state, dispatch}}>\n        {children}\n      </SyncContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AddLogGroups\",this.value);\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SelectLogGroup\",this.value);\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPage\",this.value);\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\n\nexport class SetTail{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetTail\",this.value);\n        return {\n            ...state,\n            tail:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetIndex\",this.value);\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetRegexFilter\",this.value);\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        console.log(\"SetAWSProfile\",this.value);\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].options),\n                        ...(this.value[this.profile] && this.value[this.profile].options)\n                    },\n                    credentials:{\n                        ...(state.aws[this.profile] && state.aws[this.profile].credentials),\n                        ...(this.value[this.profile] && this.value[this.profile].credentials)\n                    }\n                }\n            }\n        };\n        console.log(\"set profile result\",results);\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSProfilesLoaded\",this.value);\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"AWSSelectProfile\",this.value);\n        return {\n            ...state,\n            selectedProfile:{\n                ...state.selectedProfile,\n                options:{\n                   ...state.selectedProfile.options,\n                    ...this.value.options\n                },\n                credentials:{\n                    ...state.selectedProfile.credentials,\n                    ...this.value.credentials\n                }\n            }\n        }\n    }\n}\nexport class SetViewSection{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetViewSection\",this.value);\n        return {\n            ...state,\n            views:{\n                ...state.views,\n                ...this.value\n            }\n        }\n    }\n}\nexport class SetPagination{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SetPagination\",this.value);\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\nexport class SyncData{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        console.log(\"SyncData\",this.value);\n        return {\n            ...this.value\n        }\n    }\n}","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {GlobalContext} from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./AWSProfileSelect.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profiles,rest}) {\n        super({...profiles,...rest});\n        this.state = {profiles:profiles} || {profiles:{}};\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.state.profiles).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        console.log(\"selectedProfileEntry\",selectedProfileEntry);\n        if(selectedProfileEntry){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n       this.context.dispatch(new AWSSelectProfile(this.state.profiles['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profile</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.state.profiles).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n// import {SetAWSCredential,SetAWSOptions, SetAWSProfile,A\n\nconst DEFAULT_REGION = \"ap-southeast-2\";\nexport class AWSRegionSelect extends Component{\n    static contextType = GlobalContext;\n\n    changeHandler(event){\n        this.context.dispatch(new AWSSelectProfile({options:{region:event.target.value}}));\n    }\n\n    render(){\n        let selectedRegion =  this.context.selectedProfile && this.context.selectedProfile.options && this.context.selectedProfile.options.region || DEFAULT_REGION\n\n        return (\n            <>\n                <label>Region</label>\n                <FormControl as=\"select\" onChange={this.changeHandler.bind(this)} defaultValue={selectedRegion}>\n                    {   Object.entries(this.context.regions).map( ([key,value])=>{\n                            return (\n                                    <option key={key} value={key}>{value}</option>\n                                )   \n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    \n    }\n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.events);\n                }\n              });\n        });\n    }\n\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor({profile,rest}){\n        super({...profile,...rest});\n        //this.state = profile;\n    }\n\n    componentDidUpdate(prevProps,prevState) {\n        \n        let {profile} = this.props;\n\n        console.log(this.state, prevState);\n\n        let prevprofile = prevProps && prevProps.profile;\n\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        let prevregion = (prevprofile && prevprofile.options && prevprofile.options.region) || null;\n        let prevkey = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_access_key_id) || null;\n        let prevsecret = (prevprofile && prevprofile.credentials && prevprofile.credentials.aws_secret_access_key) || null; \n\n        console.log(region,prevregion,key,prevkey,secret,prevsecret,region !== prevregion || key !== prevkey || secret !== prevsecret)\n        if(region !== prevregion || key !== prevkey || secret !== prevsecret){\n            this.fetchLogGroups(profile);   \n        }\n        \n    } \n//\n    async fetchLogGroups(profile){\n        let region = (profile && profile.options && profile.options.region) || null;\n        let key = (profile && profile.credentials && profile.credentials.aws_access_key_id) || null;\n        let secret = (profile && profile.credentials && profile.credentials.aws_secret_access_key) || null; \n\n        console.log(key,secret,region,key && secret && region);\n        if(key && secret && region){\n            let cloudWatchLogsService = new CloudWatchLogsService(key,secret,region);\n            try {\n                let logGroups =  await cloudWatchLogsService.getLogGroups();\n                this.context.dispatch(new AddLogGroups(logGroups));\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    componentDidMount(){\n        console.log(\"did mount\",this.props);\n        let {profile} = this.props;\n        this.fetchLogGroups(profile);\n    }\n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n\n      let entry  = item.webkitGetAsEntry();\n\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { SyncContext } from \"../../context/sync-context\";\nimport {SetAWSProfile} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;       \n\nexport class LoadAWSProfiles extends Component{\n    static contextType = SyncContext;\n\n    constructor({loadedHandler,rest}){\n        super(rest);\n        this.profilesLoaded = loadedHandler;\n    }\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n\n            let baseProfile = {credentials:{},options:{}}\n            let actionValue = (fileEntry.name === 'credentials')? baseProfile.credentials:baseProfile.options;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n\n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:baseProfile}));\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    actionValue[keyVal[1].trim()] = keyVal[2].trim();                 \n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:baseProfile}));                  \n                }\n\n            });\n        }\n\n       \n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);   \n                if(this.profilesLoaded){\n                    this.profilesLoaded();\n                }\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import React,{Component} from \"react\";\nimport {Row,Col, Button} from 'react-bootstrap';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SyncContext} from \"../../context/sync-context\";\nimport {AWSProfileSelect} from \"./AWSProfileSelect\";\nimport {AWSRegionSelect} from \"./AWSRegionSelect\";\nimport {LogGroupSelect} from \"../log-group/log-group-select\";\nimport {LoadAWSProfiles} from \"./AWSConfigFileDrop\";\nimport {SetViewSection,AWSProfilesLoaded} from \"../../actions/actions\";\nimport \"./AWSProfileSection.css\";\n\n\nconst LOAD = \"load\";\nconst SELECT = \"select\";\nconst ROLES = \"role\";\nconst FILTERS = \"filters\";\n\nexport class AWSProfileSection extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n    }\n\n    toggleLeftSide(){\n        this.context.dispatch(new SetViewSection({left:this.context.views.left === LOAD?SELECT:LOAD}));\n    }\n    toggleRightSide(){\n        this.context.dispatch(new SetViewSection({right:this.context.views.right === ROLES?FILTERS:ROLES}));\n    }\n\n    render(){\n        return (\n            <>\n                {\n                    this.context.profilesLoaded && (\n                        <div className=\"aws-section-button-container\">\n                            <Button onClick={this.toggleLeftSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn profile-load\">{this.context.views.left === SELECT?'Load Profiles':'Use Profiles'}</Button>\n                            <Button onClick={this.toggleRightSide.bind(this)} variant=\"secondary\" className=\"aws-section-btn assume-role\">{this.context.views.right === FILTERS?'Assume Rule':'Log Filters'}</Button>\n                        </div>\n                    )\n                }\n                <Row>\n                    <Col className=\"p-0\">{this.context.views.left === SELECT?this.renderSelectProfile():this.renderLoadProfile()}</Col>\n                    {\n                        this.context.profilesLoaded && (\n                            <Col className=\"p-0\">{this.context.views.right === FILTERS?this.renderAWSFiltersSection():this.renderRoleSection()}</Col>\n                        )\n                    }\n                </Row>\n                {\n                    this.context.profilesLoaded && (\n                        <Row className=\"profile-display\">\n                            <Col md={6} ><LogGroupSelect profile={this.context.selectedProfile}></LogGroupSelect></Col>\n                        </Row>\n                    )\n                } \n            </>\n        );\n    }\n\n    loadedProfilesHandler(){\n        this.context.dispatch(new SetViewSection({left:\"select\"}));\n        this.context.dispatch(new AWSProfilesLoaded(true));\n    }\n\n    renderRoleSection(){\n        return (<div>Roles</div>)\n    }\n\n    renderAWSFiltersSection(){\n        return (<div>AWS LOG Filter Section</div>)\n    }\n\n    renderLoadProfile(){\n        return (\n            <Row className=\"profile-display\" ><Col md={12}><LoadAWSProfiles loadedHandler={this.loadedProfilesHandler.bind(this)}></LoadAWSProfiles></Col></Row>\n        )\n    }\n    renderSelectProfile(){\n        return (\n            <Row className=\"profile-display p-0\">\n                <Col md={6} >\n                    <SyncContext.Consumer>\n                        {ctx=>(<AWSProfileSelect profiles={ctx.aws}></AWSProfileSelect>)}\n                    </SyncContext.Consumer>\n                </Col>    \n                <Col md={6} ><AWSRegionSelect></AWSRegionSelect></Col>\n            </Row>\n        )\n    }\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport class  RegexFilterInput extends Component{\n    static contextType = GlobalContext\n\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n    handleChange (event){\n        let reg = null;\n        \n        try{\n            reg = new RegExp(event.target.value.trim());\n        }catch(e){\n            console.error(\"should probably handle bad input here \",e);\n            this.setState({error:\"Invalid Regular Expression.\"});\n        }\n\n        if(reg){\n            this.setState({error:undefined});\n            this.context.dispatch(new SetRegexFilter(reg));\n        }\n    }\n    render(){\n        return (\n            <div {...this.props}>\n                {this.state.error && ( <div class=\"text-warning\">{this.state.error}</div>)}\n                <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={this.handleChange.bind(this)} placeholder=\"regex filter\" defaultValue={this.context.filters.regexFilter} ></FormControl>\n            </div>\n        )\n    }\n}","import React,{Component} from \"react\";\nimport {GlobalContext} from \"../context/global-context\";\n\nexport class ScrollTo extends Component {\n    static contextType = GlobalContext;\n    constructor(props) {\n        super(props)\n        this.scrollable = props.scrollable;\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n    componentDidUpdate(){\n        this.context.tail && this.scrollTo();\n    }\n    scrollTo(){\n        let scrollable =  (this.scrollable && this.scrollable.current) || window\n        this.scrollRef && scrollable.scrollTo(0, this.scrollRef.current.offsetTop); // run this method to execute scrolling. \n\n    }\n\n    render() {\n        return <div style={{height:\"1px\"}} ref={this.scrollRef} ></div> \n    }   // attach the ref property to a dom element\n  \n}","import React, { Component } from \"react\";\nimport { Row, Col, Container,Form} from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\nimport {ScrollTo} from \"../scroll-to\";\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  constructor(props){\n    super(props);\n    this.state= {showLine:true,showNumbers:true}\n  }\n\n  groupRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{Object.values(regexResponse.groups).map((groupVal)=>{return (<Col md={colWidth}>{groupVal}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  captureRender(line,regexResponse,colWidth){\n    if(regexResponse && !this.state.showLine){\n      return (<Row className=\"page-line-row\">{regexResponse.splice(1,regexResponse.length).map((capt)=>{ return (<Col md={colWidth}>{capt}</Col>) })}</Row>)\n    }\n    return this.lineRender(line,regexResponse,colWidth);\n  }\n  lineRender(line,regexResponse,colWidth){\n    return line;\n  }\n  showLineHandler(evt){\n    this.setState({...this.state,showLine:evt.target.checked})\n  }\n  showNumbersHandler(evt){\n    this.setState({...this.state,showNumbers:evt.target.checked})\n  }\n  render() {\n    let pageNo = this.context.pagination.page;\n    let size = this.context.pagination.pageSize;\n\n    let start = pageNo * size;\n    let end = start + size;\n    let grouped = false;\n    let headers = []; \n    let renderType = this.lineRender.bind(this);\n\n    let colWidth = \"auto\";\n\n    let pageRender = this.context.page\n    .filter((line,i )=> {\n      return this.context.index[i];\n    })\n    .slice(start,end)\n    .map((line, index) => {\n      let regexResponse = this.context.filters && this.context.filters.regexFilter && this.context.filters.regexFilter.exec(line);\n      if(index === 0 && regexResponse && regexResponse.length > 1){\n        grouped = true;\n        if(regexResponse.groups){\n          renderType = this.groupRender.bind(this);\n          headers = Object.keys(regexResponse.groups);\n          if(headers.length > 0){\n            colWidth = Math.max(Math.floor(12/headers.length),1);  \n          }\n        }else{\n          renderType = this.captureRender.bind(this);\n        }\n      }\n      \n      return (\n        <Row className=\"line-row\" key={index}>\n          { this.state.showNumbers && (<div className=\"num-col text-center\">{index}</div>)}  \n          <Col md={this.state.showNumbers?11:12} className=\"page-line\">{renderType(line,regexResponse,colWidth)}</Col>\n        </Row>\n      );\n    })\n\n\n    \n      \n       \n\n    return (\n      <Container fluid={true}>\n        <Row>\n          {pageRender.length > 0 && (<Form.Check inline label=\"numbers\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showNumbers} onChange={this.showNumbersHandler.bind(this)}/>)}\n          {\n            grouped && <Form.Check inline label=\"raw\" type=\"checkbox\" id=\"showlinecheckbox\" checked={ this.state.showLine} onChange={this.showLineHandler.bind(this)}/>\n          }  \n        </Row>      \n        {\n          headers.length > 0 && (\n          <Row>\n            <div className=\"num-col text-center\"></div>\n            <Col md={11} className=\"page-line\">\n              <Row >{headers.map((header)=>{ return (<Col md={colWidth}>{header}</Col>) })}</Row>\n            </Col>\n            \n          </Row>)\n        }\n        {pageRender}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            let pagination = this.context.pagination;\n            let page = pagination.page;\n            if(lines && lines > pagination.pageSize){\n                let newPages = Math.ceil(lines / pagination.pageSize);\n                if(pagination.page > newPages){\n                  page = newPages; \n                }\n            }else{\n                page = 0;\n            }\n\n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length,page:page}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n\n        // let pages = (this.context.pages / this.context.pageSize) + (this.context.pages % this.context.pageSize > 0)?1:0;\n        // let pageSize = this.context.pagination.pageSize;\n        \n\n        // console.log(this.context.pagination);\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n\n\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n\n  async fetchEvents() {\n    let { profile, logGroup } = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let logEvents = (await cloudWatchLogsService.getLogEvents({\n          logGroupName: logGroup,\n          logStreamNamePrefix: \"20\"\n        }))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n\n        this.context.dispatch(new SetPage(logEvents));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup } = this.props;\n    if (\n      profile &&\n      logGroup &&\n      (profile !== prevProps.profile || logGroup !== prevProps.logGroup)\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl,Form,Col,Row} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage,SetTail,SetPagination} from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async processFileDelta(fileEntry,start,end){\n        let reader = FileReaderService.getInstance();\n        let file = (await new Promise((resolve,reject)=>fileEntry.file(resolve,reject))).slice(start,end);\n        let content = await reader.readFile(file);\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(this.context.page.concat(lines)));\n\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr,selectedFile:filArr[0]});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        });\n        this.setState({selectedFile:selectedFile});\n        this.processFile(selectedFile); //set the file as selected. \n\n    }\n\n    tailFile(fileEntry){\n        \n        fileEntry.file((file,err)=>{\n            if(this.state.fileSize !== file.size){\n                this.setState({fileSize:file.size});\n            }\n        });\n    }\n\n    toggleTail(event){\n       this.context.dispatch(new SetTail(event.target[\"checked\"]));\n\n       let pagination = this.context.pagination;\n\n       if(pagination.lines && pagination.lines > pagination.pageSize){\n           let pages = Math.ceil(pagination.lines / pagination.pageSize);\n           this.context.dispatch(new SetPagination({page:(pages-1)}));\n       }\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        if(this.state.tail && this.state.selectedFile && \n                !(prevState && prevState.tail && prevState.selectedFile && prevState.selectedFile === this.state.selectedFile)\n            ){\n            let intervalId = window.setInterval(this.tailFile.bind(this),500,this.state.selectedFile);\n            this.setState({intervalId:intervalId});   \n        }else if(!this.context.tail){    \n            this.state.intervalId && window.clearInterval(this.state.intervalId);\n        }\n\n        if(prevState.fileSize && prevState.fileSize !== this.state.fileSize){\n            this.processFileDelta(this.state.selectedFile,prevState.fileSize,this.state.fileSize);\n            //read the file dif;\n        }\n\n        this.context.tail !== this.state.tail && this.setState({tail:this.context.tail});\n    }\n\n    \n    componentWillUnmount(){\n        this.state.intervalId && window.clearInterval(this.state.intervalId);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <Row>\n                        <Col md={11}>\n                            <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                                {\n                                    this.state.files.map((file)=>{\n                                        return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                                    })\n                                } \n                            </FormControl> \n                        </Col>\n                        <Col md={1}><Form.Check type=\"checkbox\" label=\"tail\" onChange={this.toggleTail.bind(this)} checked={this.context.tail || false}/></Col> \n                    </Row>\n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination,SetTail} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    \n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetTail(false));\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(){\n\n    }\n\n    componentDidUpdate(){\n       \n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.lines > pagination.pageSize){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                if((i+offset + 1) > 0){\n                    displayPages[i] = (i + offset + 1);\n                }\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={3}>\n                    <Container className=\"justify-content-end\">\n                    <Row >\n                        <Col><label className=\"col-form-label\">Page Size</label></Col>\n                        <Col><FormControl className=\"\" as=\"input\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl></Col>\n                    </Row>\n                    </Container>\n                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{return <></>}\n        \n    }\n\n}","import React,{Component} from \"react\";\nimport {SyncContext,InitSyncState} from \"../../context/sync-context\";\nimport {SyncData,AWSProfilesLoaded,SetViewSection} from \"../../actions/actions\";\n\nconst PUSH_EVENT_KEY = \"push_ss_file_filter\";\nconst PULL_EVENT_KEY = \"pull_ss_file_filter\";\n\nexport class SynchronizedContent extends Component{\n    static contextType = SyncContext;\n    constructor(props){\n        super(props);\n        this.lastEvent = InitSyncState;\n    }\n\n    componentDidUpdate(prevProps,prevState){\n        let {aws} = this.context;\n        if(aws && JSON.stringify(this.lastEvent) !== JSON.stringify(aws)){\n            this.push(aws);         \n        } \n\n        let profilesLoaded = aws && Object.keys(aws).length > 0;\n        if(profilesLoaded && this.props.gctx.profilesLoaded !== profilesLoaded) {\n            window.setTimeout(()=>{ //doesnt like me doing dispatches in the same update loop. put the updates in the next one.\n                this.props.gctx.dispatch(new SetViewSection({left:\"select\"}));\n                this.props.gctx.dispatch(new AWSProfilesLoaded(profilesLoaded));\n            },0);\n        };\n    }\n\n    storageEventListener(event){\n        let lastEventString = (this.lastEvent && JSON.stringify(this.lastEvent)) || null;\n        \n        if(event.key !== PULL_EVENT_KEY && event.key !== PUSH_EVENT_KEY) return; //we dont care about other events.\n\n        let parsed = (event.newValue && JSON.parse(event.newValue)) || null;\n\n        if(!parsed) return; // do nothing if no value to work with\n        if (event.key == PULL_EVENT_KEY && lastEventString) {\n            this.push(this.lastEvent); //Another tab requested content\n        } else if (event.key == PUSH_EVENT_KEY && event.newValue !== lastEventString ) {\n            //received new data. update context.\n            this.lastEvent = parsed;\n            this.context.dispatch(new SyncData({aws:parsed}));              \n        }\n    }\n\n    componentWillMount(){\n        window.addEventListener('storage', this.storageEventListener.bind(this) , false);\n        \n        this.pull();\n    }\n\n    push(value){\n        this.lastEvent = value; \n        window.localStorage.setItem(PUSH_EVENT_KEY, JSON.stringify(value));\n        // the other tab should now have it, so we're done with it.\n        window.setTimeout(()=>{\n            window.localStorage.removeItem(PUSH_EVENT_KEY); // <- could do short timeout as well.\n        },10);\n    }\n\n    pull(){   \n        window.localStorage.setItem(PULL_EVENT_KEY,\"{}\");\n        window.localStorage.removeItem(PULL_EVENT_KEY);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('storage', this.storageEventListener.bind(this) , false);\n    }\n    render(){    \n        return (<></>)\n    }\n}","import React,{Component} from \"react\";\nimport {ScrollTo} from \"./scroll-to\";\n\nexport class Scrollable extends Component {\n    constructor(props) {\n        super(props);\n        this.scrollRef = React.createRef()   // Create a ref object \n    }\n   \n\n    render() {\n        return (\n            <div ref={this.scrollRef} {...this.props}>\n                {this.props.children}\n                <ScrollTo scrollable={this.scrollRef}></ScrollTo>\n            </div>\n        ) \n    }   // attach the ref property to a dom element\n  \n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {SyncState,SyncContext} from \"./context/sync-context\";\nimport {AWSProfileSection} from \"./components/aws/AWSProfileSection\"\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\nimport {SynchronizedContent} from \"./components/sync/synchronized-content\";\nimport {Scrollable} from \"./components/scrollable\";\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <SyncState>\n        <GlobalContext.Consumer>\n          {gCtx => ( <SynchronizedContent gctx={gCtx}></SynchronizedContent>)}\n        </GlobalContext.Consumer>\n          \n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSProfileSection></AWSProfileSection>\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <Scrollable className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && (<Filter></Filter>)\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  <SyncContext.Consumer>\n                    {\n                      aCtx =>( \n                        aCtx.profilesLoaded && aCtx.selectedProfile && \n                        (\n                          <GlobalContext.Consumer>\n                            {gCtx => ( gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (\n                                <LogEvents profile={aCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName}></LogEvents> \n                              ))}\n                          </GlobalContext.Consumer>\n                        ) \n                      )\n                    }\n                  </SyncContext.Consumer>\n                )\n              }\n              \n              \n              </Scrollable>\n            <footer ></footer>\n          </div>\n        </SyncState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}