{"version":3,"sources":["context/global-context.js","context/aws-context.js","actions/actions.js","components/aws/profile-select.js","components/file-drop/file-drop.js","service/FileReader.js","components/aws/AWSConfigFileDrop.js","service/log-event-service.js","components/log-group/log-group-select.js","components/filter-input/filter-input.js","components/page/page.js","components/filter-input/filter.js","components/log-events/log-events.js","components/file/file-input.js","components/page/pagination.js","App.js","serviceWorker.js","index.js"],"names":["InitGlobalState","logGroups","selectedGroup","page","index","filters","pagination","pageSize","GlobalContext","createContext","reducer","state","action","reduce","GlobalState","_ref","children","_useReducer","useReducer","_useReducer2","Object","slicedToArray","dispatch","react_default","a","createElement","Provider","value","objectSpread","InitAWSState","aws","profilesLoaded","AWSContext","AWSState","AddLogGroups","classCallCheck","this","createClass","key","SelectLogGroup","SetPage","SetIndex","SetRegexFilter","regexFilter","SetAWSCredential","profile","defineProperty","credentials","SetAWSOptions","options","SetAWSProfile","AWSProfilesLoaded","AWSSelectProfile","selectedProfile","SetPagination","AWSProfileSelect","_Component","props","possibleConstructorReturn","getPrototypeOf","call","inherits","event","selectedProfileEntry","entries","context","filter","_ref2","target","map","_ref3","_ref4","currentValue","Fragment","FormControl_default","as","onChange","select","bind","defaultValue","_ref5","_ref6","title","Component","contextType","themes","dark","--color","--highlight-color","--opacity","light","FileDrop","_this","dropRef","React","createRef","highlight","e","stopPropagation","preventDefault","stopEvent","setHighlight","_traverseDirectory","asyncToGenerator","regenerator_default","mark","_callee","dir","returnFiles","direntries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","entry","wrap","_context","prev","next","readDirectory","sent","undefined","Symbol","iterator","done","isDirectory","traverseDirectory","concat","t0","return","finish","abrupt","stop","_x","apply","arguments","Promise","resolve","reject","createReader","readEntries","err","_handleDrop","_callee2","files","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","_context2","console","log","dataTransfer","items","webkitGetAsEntry","handleDrop","error","_x2","setState","updateCSSVariables","theme","div","current","addEventListener","handleDragIn","handleDragOut","handleDragOver","removeEventListener","_this2","forEach","prop","style","setProperty","className","ref","Queue","list","listeners","deferredObj","push","notify","listener","length","deferred","shift","execute","DeferredFileReader","file","promise","ExtFileReader","queue","reader","FileReader","onload","result","addListener","readAsText","FileReaderService","no_readers","fileQueue","i","_readFile","deferredFileReader","addDeferred","getInstance","instance","SPLIT_LINES_REGEX","PROFILE_REGEX","KEY_VALUE_REGEX","LoadAWSProfiles","_processFile","fileEntry","actionClass","content","currentProfile","name","t1","readFile","split","line","profRegRes","exec","keyVal","trim","actionInst","responses","processFile","all","file_drop_FileDrop","CloudWatchLogsService","secret","region","awsCloudWatchLogs","CloudWatchLogs","accessKeyId","secretAccessKey","_getLogGroups","describeLogGroups","resp","_getLogEvents","filterLogEvents","events","LogGroupSelect","_componentDidUpdate","prevProps","cloudWatchLogsService","aws_access_key_id","aws_secret_access_key","getLogGroups","selectLogGroup","lg","logGroupName","RegexFilterInput","rest","esm_extends","_useContext","useContext","type","RegExp","placeholder","Page","pageNo","size","start","end","Container","fluid","slice","Row","Col","md","Filter","prevState","snapshots","reindex","test","lines","iVal","page_Page","LogEvents","_fetchEvents","_this$props","logGroup","logEvents","getLogEvents","logStreamNamePrefix","logEvent","message","fill","fetchEvents","_this$props2","filter_Filter","FileInput","filArr","selectedFile","fullPath","cur","es_FormControl","selectFile","Paging","nextPage","evt","pages","Math","ceil","offset","displayPages","nextpage","prevPage","Pagination","First","onClick","toPage","Prev","Item","active","Ellipsis","Next","Last","pageSizeChange","App","selectedTab","keyEvent","global_context_GlobalState","aws_context_AWSState","Tabs","onSelect","tabSelect","Tab","eventKey","file_input_FileInput","Consumer","ctx","profile_select_AWSProfileSelect","log_group_select_LogGroupSelect","AWSConfigFileDrop_LoadAWSProfiles","pagination_Paging","gCtx","aCtx","log_events_LogEvents","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb1c965d.chunk.js","sourcesContent":["import React,{createContext,useReducer} from \"react\"; \n\nexport const InitGlobalState = {\n    logGroups:[],\n    selectedGroup:{},\n    page:[],\n    index:[],\n    filters:{},\n    pagination:{\n        page:0,\n        pageSize:500,\n    },\n};\n\nexport const GlobalContext = createContext(InitGlobalState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const GlobalState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitGlobalState);\n\n    return (\n      <GlobalContext.Provider value={{...state, dispatch}}>\n        {children}\n      </GlobalContext.Provider>\n    )\n  }\n\n\n","import React,{createContext,useReducer} from \"react\"; \n\nexport const InitAWSState = {\n    aws:{\n        \n    },\n    profilesLoaded:false\n\n};\n\nexport const AWSContext = createContext(InitAWSState);\n\nexport const reducer = (state, action) => {\n    return (action && action.reduce && action.reduce(state)) || state;\n}\n\nexport const AWSState = ({ children }) => {\n    \n    const [state, dispatch] = useReducer(reducer, InitAWSState);\n\n    return (\n      <AWSContext.Provider value={{...state, dispatch}}>\n        {children}\n      </AWSContext.Provider>\n    )\n  }\n\n\n","\nexport class AddLogGroups{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {...state,logGroups:this.value};\n    }\n}\nexport class SelectLogGroup{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {...state,selectedGroup:this.value};\n    }\n}\n\nexport class SetPage{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            page:this.value\n        };\n    }\n}\n\nexport class SetIndex{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            index:this.value\n        };\n    }\n}\n\n\nexport class SetRegexFilter{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            filters:{\n                ...state.filters,\n                regexFilter:this.value\n            }\n        };\n    }\n}\n\nexport class SetAWSCredential{\n    constructor(profile,value){\n        this.value = value;\n        this.profile = profile;\n    }\n    reduce(state){\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    credentials:{\n                        ...state.aws[this.profile].credentials,\n                        ...this.value\n                    }\n                }\n            }\n        };\n        return results;\n    }\n}\n\nexport class SetAWSOptions{\n    constructor(profile,value){\n        this.value = value;\n        this.profile = profile;\n    }\n    reduce(state){\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    options:{\n                        ...state.aws[this.profile].options,\n                        ...this.value\n                    }\n                }\n            }\n        };\n        return results;\n    }\n}\nexport class SetAWSProfile{\n    constructor(profile, value){\n        this.value = value; \n        this.profile = profile;\n    }\n    reduce(state){\n        let results = {\n            ...state,\n            aws:{\n                ...state.aws,\n                [this.profile]:{\n                    ...state.aws[this.profile],\n                    ...this.value[this.profile]      \n                }\n            }\n        };\n        return results;\n    }\n}\n\nexport class AWSProfilesLoaded{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            profilesLoaded:this.value\n        }\n    }\n}\n\nexport class AWSSelectProfile{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            selectedProfile:this.value\n        }\n    }\n}export class SetPagination{\n    constructor(value){\n        this.value = value;\n    }\n    reduce(state){\n        return {\n            ...state,\n            pagination:{\n                ...state.pagination,\n                ...this.value\n            }\n        }\n    }\n}\n\n","import React, { Component} from \"react\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {AWSContext} from \"../../context/aws-context\";\nimport {AWSSelectProfile} from \"../../actions/actions\";\n\nimport \"./profile-select.css\";\n\nexport class AWSProfileSelect extends Component{\n    static contextType = AWSContext;\n\n    constructor(props) {\n        super(props);\n      }\n\n    select(event){\n        \n        let selectedProfileEntry = Object.entries(this.context.aws).filter(([key,value])=>{\n            return event.target.value === key;\n        }).map(([key,value])=>{\n            return value;\n        }).reduce((currentValue,value)=>{\n            return value;\n        });\n\n        if(selectedProfileEntry){\n            this.context.dispatch(new AWSSelectProfile(selectedProfileEntry));\n        }\n            \n    }\n\n    componentDidMount() {\n        this.context.dispatch(new AWSSelectProfile(this.context.aws['default']));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Profiles</label>\n                <FormControl as=\"select\" onChange={this.select.bind(this)} defaultValue=\"default\">\n                    {\n                        Object.entries(this.context.aws).map( ([key,value])=>{\n                            return (<option key={key} title={key} >{key}</option>)\n                        })\n                    } \n                </FormControl> \n            </>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./file-drop.css\";\nconst themes = {\n  dark:{\n    \"--color\": \"midnightblue\",\n    \"--highlight-color\":\"yellow\",\n    \"--opacity\":\"0.9\",\n  },\n  light:{\n      \"--color\":\"white\",\n      \"--highlight-color\":\"yellow\",\n      \"--opacity\":\"0.6\",\n  }\n};\n\nexport class FileDrop extends Component {\n  constructor(props) {\n    super(props);\n    this.dropRef = React.createRef();\n    this.state = {highlight:\"\"};\n  }\n\n  stopEvent(e){\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  handleDragOver(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragIn(e) {\n    this.stopEvent(e);\n    this.setHighlight(true);\n  }\n  handleDragOut(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n  }\n\n  async traverseDirectory(dir){\n    let returnFiles = [];\n\n      let direntries = await this.readDirectory(dir);\n      for(let entry of direntries){\n        if(entry.isDirectory){\n          let entries = await this.traverseDirectory(entry);\n          returnFiles = returnFiles.concat(entries);\n        }else{\n          returnFiles = returnFiles.concat([entry])\n        }\n      }\n      return returnFiles;\n  }\n\n  readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n\n  async handleDrop(e) {\n    this.stopEvent(e);\n    this.setHighlight(false);\n\n    console.log(e.dataTransfer.items,e.dataTransfer.files);\n    let files =[];\n\n    for(let item of e.dataTransfer.items){\n      let entry  = item.webkitGetAsEntry();\n      if(entry.isDirectory){\n        let entries = await this.traverseDirectory(entry);\n        files = files.concat(entries);\n      }else{\n        files = files.concat([entry])\n      }\n    }\n\n    if(this.props.handleDrop){\n      try{\n        this.props.handleDrop(files);\n      }catch(e){\n        console.error(\"error handling Drop event\",e);\n      }\n      \n    }\n  }\n\n  setHighlight(highlight){\n    this.setState((state)=>{\n      return {...state, highlight:(highlight)? \"highlight\" : \"\"};\n    });\n  }\n\n  componentDidMount() {\n\n    this.updateCSSVariables(themes[this.props.theme]);\n    // this.setHighlight(false);\n    let div = this.dropRef.current;\n    if (div) {\n      div.addEventListener(\"dragenter\", this.handleDragIn.bind(this));\n      div.addEventListener(\"dragleave\", this.handleDragOut.bind(this));\n      div.addEventListener(\"dragover\", this.handleDragOver.bind(this));\n      div.addEventListener(\"drop\", this.handleDrop.bind(this));\n    }\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n\n    if (div) {\n      div.removeEventListener(\"dragenter\", this.handleDragIn);\n      div.removeEventListener(\"dragleave\", this.handleDragOut);\n      div.removeEventListener(\"dragover\", this.handleDragOver);\n      div.removeEventListener(\"drop\", this.handleDrop);\n    }\n  }\n\n  updateCSSVariables(theme) {\n    Object.entries(theme).forEach(([prop, value]) => this.dropRef.current.style.setProperty(prop, value));\n  }\n\n  render() {\n    return (\n      <div className={`file-drop-wrapper ${this.state.highlight}`} ref={this.dropRef}>\n        <div className={`file-drop ${this.state.highlight}`}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","/**\n * a queue that listens for incoming request and distributes them to workers listening for them\n */\nclass Queue {\n\n    list = [];\n    listeners = [];\n\n    addDeferred(deferredObj){\n        this.list.push(deferredObj);\n        this.notify();\n    }\n\n    addListener(listener){\n        this.listeners.push(listener);\n        this.notify();\n    }\n\n    notify(){\n        if(this.listeners.length > 0 && this.list.length > 0){\n\n            let deferred = this.list.shift();\n            let listener = this.listeners.shift();\n\n            listener.execute(deferred);\n            this.notify();\n        }\n    }    \n}\n\n/**\n * wrapper arround the promise which allows control of resolving and rejecting to a 3rd party\n */\nclass DeferredFileReader{\n    constructor(file){\n        this.file = file;\n        this.promise = new Promise((resolve,reject)=>{\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\n\n/**\n * wrapper arround the JS FileReader which is promise based\n */\nclass ExtFileReader{\n    constructor(queue){\n        this.queue = queue;\n        this.reader = new FileReader();\n    }\n\n    async execute(deferred){\n        this.reader.onload = (e) => {\n            deferred.resolve(e.target.result);\n            this.queue.addListener(this);\n        }\n        this.reader.readAsText(deferred.file);\n    }\n\n}\n\n/**\n * the actual service. which hides all the above. \n * has a static method for singleton. (it should be) creating a lot of these creates memory leaks as chrome doesnt clean up FileReader nicely, so a limited number should be created and shared.\n */\nexport class FileReaderService {\n\n    constructor(no_readers){\n        this.fileQueue = new Queue();\n        for(let i=0;i<no_readers;i++){\n            this.fileQueue.addListener(new ExtFileReader(this.fileQueue));\n        }\n        \n    }\n    \n    async readFile(file){\n        let deferredFileReader = new DeferredFileReader(file);\n        this.fileQueue.addDeferred(deferredFileReader);\n        return deferredFileReader.promise;\n    }\n            \n}\n\nFileReaderService.getInstance = ()=>{\n    if(!FileReaderService.instance){\n        FileReaderService.instance = new FileReaderService(6);\n    }\n    return FileReaderService.instance;\n}\n","import React, { Component} from \"react\";\n\nimport {FileDrop} from \"../file-drop/file-drop\";\nimport {FileReaderService} from \"../../service/FileReader\";\nimport { AWSContext } from \"../../context/aws-context\";\nimport {SetAWSCredential,SetAWSOptions, SetAWSProfile,AWSProfilesLoaded} from \"../../actions/actions\";\n\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\nconst PROFILE_REGEX = /\\[(.*?)\\]/;\nconst KEY_VALUE_REGEX = /(.*?)=(.*)/;\n\nexport class LoadAWSProfiles extends Component{\n    static contextType = AWSContext;\n\n    async processFile(fileEntry){\n\n        if(fileEntry.name === 'credentials' || fileEntry.name === 'config'){\n            let reader = FileReaderService.getInstance();\n            let actionClass = (fileEntry.name === 'credentials')? SetAWSCredential:SetAWSOptions;\n            \n            let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n            let currentProfile = null;\n\n            content.split(SPLIT_LINES_REGEX).forEach((line)=>{\n                \n                let profRegRes = PROFILE_REGEX.exec(line);      \n                if(profRegRes && profRegRes[1]){\n                    currentProfile = profRegRes[1];\n\n                    this.context.dispatch(new SetAWSProfile(currentProfile,{[currentProfile]:{}}));\n                }\n\n                let keyVal = KEY_VALUE_REGEX.exec(line);\n                if(keyVal && keyVal[1] && keyVal[2]){\n                    let value = {};\n                    value[keyVal[1].trim()] = keyVal[2].trim();\n                    \n                    let actionInst = new actionClass(currentProfile,value);\n                    this.context.dispatch(actionInst);\n                }\n\n            });\n        }\n        return ;\n    }\n\n    async handleDrop(files){\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                responses.push(this.processFile(files[i]));\n            }\n            try{\n                await Promise.all(responses);    \n                this.context.dispatch(new AWSProfilesLoaded(true));\n            }catch(e){\n                console.error(e)\n            }\n\n        }\n    }\n\n    render(){\n        return (\n            <FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop AWS profile files</FileDrop>\n        );\n    }\n    \n}\n","import {CloudWatchLogs} from \"aws-sdk\";\n\nexport class CloudWatchLogsService {\n\n    constructor(key, secret, region){\n        this.awsCloudWatchLogs = new CloudWatchLogs({accessKeyId:key,secretAccessKey:secret,region:region});\n    }\n\n    async getLogGroups(){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.describeLogGroups((err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.logGroups);\n                }\n            });\n        });    \n    }\n\n    async getLogEvents(options){\n        return new Promise((resolve,reject)=>{\n            this.awsCloudWatchLogs.filterLogEvents(options,(err,resp)=>{\n                if(err){\n                    console.log(err);\n                    reject(err);\n                }\n                if(resp){\n                    resolve(resp.events);\n                }\n              });\n        });\n    }\n\n}","import React,{Component} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {CloudWatchLogsService} from \"../../service/log-event-service\";\n\nimport {AddLogGroups,SelectLogGroup} from \"../../actions/actions\";\n\nexport class LogGroupSelect extends Component{\n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n    }\n\n    async componentDidUpdate(prevProps) {\n        \n        let {profile} = this.props;\n        \n        if( profile && profile !== prevProps.profile){\n           let region = profile.options.region;\n            let key = profile.credentials.aws_access_key_id;\n            let secret = profile.credentials.aws_secret_access_key; \n\n            if(key && secret){\n                let cloudWatchLogsService = new CloudWatchLogsService(key,secret,region);\n                try {\n                    let logGroups =  await cloudWatchLogsService.getLogGroups();\n                    this.context.dispatch(new AddLogGroups(logGroups));\n                }catch(err){\n                    console.log(err);\n                }\n            }\n        }\n  \n    } \n\n    selectLogGroup(event){\n        this.context.dispatch(new SelectLogGroup(this.context.logGroups[event.target.value]));\n    }\n\n    render(){\n        return (\n            <>\n                <label>Log Group</label>\n                <FormControl as=\"select\" onChange={this.selectLogGroup.bind(this)} defaultValue=\"\">\n                    <option></option>\n                    {\n                        this.context.logGroups.map((lg,index)=>{\n                            return (<option key={index} value={index} >{lg.logGroupName}</option>)\n                        })\n                    }\n                </FormControl>        \n            </>\n        )\n    }\n}","import React,{useContext} from 'react';\nimport {GlobalContext} from \"../../context/global-context\";\nimport {SetRegexFilter} from \"../../actions/actions\";\nimport FormControl from \"react-bootstrap/FormControl\";\n\nexport function RegexFilterInput({...rest}){\n    \n    const {filters,dispatch} = useContext(GlobalContext);\n\n    const handleChange = (event)=>{\n        dispatch(new SetRegexFilter(new RegExp(event.target.value)));\n    }\n\n    return (\n        <div {...rest}>\n            <FormControl className=\"\" as=\"input\" type=\"text\"  onChange={handleChange} placeholder=\"regex filter\" defaultValue={filters.regexFilter} ></FormControl>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport \"./page.css\";\n\nexport class Page extends Component {\n  static contextType = GlobalContext;\n\n  render() {\n      let pageNo = this.context.pagination.page;\n      let size = this.context.pagination.pageSize;\n\n      let start = pageNo * size;\n      let end = start + size;\n      \n    return (\n      <Container fluid={true}>\n        {this.context.page\n          .filter((line,i )=> {\n            return this.context.index[i];\n          })\n          .slice(start,end)\n          .map((line, index) => {\n            return (\n              <Row className=\"line-row\" key={index}>\n                <div className=\"num-col text-center\">{index}</div>\n                <Col md={11}>{line}</Col>\n              </Row>\n            );\n          })}\n      </Container>\n    );\n  }\n}\n","import React,{Component} from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport { SetPagination, SetIndex } from \"../../actions/actions\";\nimport {Page} from \"../../components/page/page\"\n\n\n\nexport class Filter extends Component{\n    \n    static contextType = GlobalContext;\n\n    constructor(props){\n        super(props);\n        this.state = {page:[],filters:[]};\n    }\n\n    \n    componentDidUpdate(prevProps,prevState,snapshots){\n        \n\n        let reindex = false;\n        if(this.state.page != this.context.page){\n            reindex = true;\n        }\n        if(this.state.filters != this.context.filters){\n            reindex = true;\n        }\n        if(reindex){\n            let index = this.context.page\n                .map(line => {\n                    return this.context.filters && this.context.filters.regexFilter ? this.context.filters.regexFilter.test(line) : true;\n                });\n\n            let lines = index.filter((iVal)=>iVal);\n            \n            this.context.dispatch(new SetIndex(index));\n            this.context.dispatch(new SetPagination({lines:lines.length}));\n        \n            this.setState((state)=>{\n                return {\n                    page:this.context.page,\n                    filters:this.context.filters\n                }\n            })\n        }\n    }\n\n    render(){\n        return  ( <Page></Page>);\n    }\n\n}","import React, { Component } from \"react\";\n\nimport { GlobalContext } from \"../../context/global-context\";\n\nimport { CloudWatchLogsService } from \"../../service/log-event-service\";\n\nimport { SetPage, SetIndex } from \"../../actions/actions\";\nimport {Filter} from \"../../components/filter-input/filter\";\n\nexport class LogEvents extends Component {\n  static contextType = GlobalContext;\n\n\n  async fetchEvents() {\n    let { profile, logGroup } = this.props;\n    let region = profile.options.region;\n    let key = profile.credentials.aws_access_key_id;\n    let secret = profile.credentials.aws_secret_access_key;\n\n    if (key && secret) {\n      let cloudWatchLogsService = new CloudWatchLogsService(\n        key,\n        secret,\n        region\n      );\n      try {\n        let logEvents = (await cloudWatchLogsService.getLogEvents({\n          logGroupName: logGroup,\n          logStreamNamePrefix: \"20\"\n        }))\n        .map((logEvent)=>{\n            return logEvent.message;\n        });\n\n        this.context.dispatch(new SetPage(logEvents));\n        this.context.dispatch(new SetIndex([].fill(true,0,logEvents.length-1)));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  componentDidUpdate(prevProps) {\n    let { profile, logGroup } = this.props;\n    if (\n      profile &&\n      logGroup &&\n      profile !== prevProps.profile &&\n      logGroup !== prevProps.logGroup\n    ) {\n      this.fetchEvents();\n    }\n  }\n\n  render() {\n    return ( <Filter></Filter>)\n  }\n}\n","import React,{Component} from \"react\";\nimport {FormControl} from \"react-bootstrap\";\nimport {FileDrop} from \"../file-drop/file-drop\"\nimport {FileReaderService} from \"../../service/FileReader\"\nimport { SetPage } from \"../../actions/actions\";\nimport { GlobalContext } from \"../../context/global-context\";\nconst SPLIT_LINES_REGEX =/\\r\\n|\\n/;\n\nexport class FileInput extends Component{\n    static contextType = GlobalContext;\n    constructor(props){\n        super(props);\n        this.state = {files:[]};\n    }\n\n    async processFile(fileEntry){\n        let reader = FileReaderService.getInstance();\n\n        //should probably check the file size and split it up into chunks. then join lines together later.\n        let content = await reader.readFile(await new Promise((resolve,reject)=>fileEntry.file(resolve,reject)));\n\n        let lines = content.split(SPLIT_LINES_REGEX);\n        this.context.dispatch(new SetPage(lines));\n    }\n\n    async handleDrop(files){\n        let filArr = []\n        if(files && files.length > 0){\n            let responses = [];\n            for(let i=0;i<files.length;i++){\n                filArr.push(files[i]);\n            }\n            this.setState({files:filArr});\n            this.processFile(filArr[0]);\n        }\n\n    }\n\n    selectFile(event){\n        let selectedFile = this.state.files.filter((file)=>{\n            return event.target.value === file.fullPath;\n        }).reduce((cur,value)=>{\n            return value;\n        })\n        this.processFile(selectedFile);\n    }\n\n    render(){\n        if(this.state.files.length > 0){\n            return (\n                <>\n                    <label>Files</label>\n                    <FormControl as=\"select\" onChange={this.selectFile.bind(this)} defaultValue={this.state.files[0]}>\n                        {\n                            this.state.files.map((file)=>{\n                                return (<option key={file.fullPath} value={file.fullPath} >{file.fullPath}</option>)\n                            })\n                        } \n                    </FormControl> \n                </> \n            )\n        }else{\n            return (<FileDrop theme=\"light\" handleDrop={this.handleDrop.bind(this)}>Drop file</FileDrop>)\n        }\n\n        \n    }\n}","import React,{Component} from \"react\";\nimport { Pagination,Row,Col,FormControl,Container} from \"react-bootstrap\";\nimport { GlobalContext } from \"../../context/global-context\";\nimport {SetPagination} from \"../../actions/actions\";\n\nconst PAGING_OFFSET = -2;\nconst PAGING_TO_DISPLAY = 5;\n\nexport class Paging extends Component{\n    SetPagination\n    static contextType = GlobalContext;\n\n    toPage(nextPage){\n        this.context.dispatch(new SetPagination({page:(nextPage-1)}));\n    }\n\n    pageSizeChange(evt){\n        this.context.dispatch(new SetPagination({pageSize:evt.target.value}));\n    }\n\n    render(){\n\n        \n        let pagination = this.context.pagination;\n\n        //display pages = first prev ... (current - 2) -> (current + 2) ... next last \n        if(pagination.lines && pagination.lines > pagination.pageSize){\n            let pages = Math.ceil(pagination.lines / pagination.pageSize);\n            let pageSize = pagination.pageSize;\n\n            let offset = (pagination.page + PAGING_OFFSET);\n            if(offset < 0){\n                offset = 0;\n            }\n            if(offset > (pages - PAGING_TO_DISPLAY)){\n                offset = pages - PAGING_TO_DISPLAY\n            }\n\n            let displayPages = [];\n\n            for(let i=0;i<5;i++){\n                displayPages[i] = (i + offset + 1);\n            }\n\n            let nextpage = (pagination.page + 2 >= pages )?pages:pagination.page + 2;\n            let prevPage = (pagination.page < 1)?1:pagination.page;\n\n            return  (<Row>\n                <Col md={9}>\n                    <Pagination>\n                        <Pagination.First onClick={this.toPage.bind(this,1)}/>\n                        <Pagination.Prev onClick={this.toPage.bind(this,prevPage)}/>\n                        {\n                            (displayPages[0] > 1 && <Pagination.Item key={1} active={0 === pagination.page} onClick={this.toPage.bind(this,1)}>{1}</Pagination.Item>) || <></>\n                        }\n                        {\n                            (displayPages[0] > 1 && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            displayPages.map((page,index)=>{\n\n                                return <Pagination.Item key={page} active={page-1 === pagination.page} onClick={this.toPage.bind(this,page)}>{page}</Pagination.Item>\n                            })\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Ellipsis />) || <></>\n                        }\n                        {\n                            (displayPages[4] < pages && <Pagination.Item key={pages} active={pages-1 === pagination.page} onClick={this.toPage.bind(this,pages)}>{pages}</Pagination.Item>) || <></>\n                        }\n                        <Pagination.Next onClick={this.toPage.bind(this,nextpage)}/>\n                        <Pagination.Last onClick={this.toPage.bind(this,pages)}/>\n                    </Pagination>\n                </Col>\n                <Col md={3}>\n                    <Container className=\"justify-content-end\">\n                    <Row >\n                        <Col><label className=\"col-form-label\">Page Size</label></Col>\n                        <Col><FormControl as=\"input\" type=\"number\" value={pageSize} onChange={this.pageSizeChange.bind(this)}></FormControl></Col>\n                    </Row>\n                    </Container>\n                    \n                </Col>\n            </Row>\n            )\n            ;\n        }else{return <></>}\n        \n    }\n\n}","import React,{Component} from 'react';\n// import {FileDrop} from './components/file-drop/file-drop';\nimport {GlobalState,GlobalContext} from \"./context/global-context\";\nimport {Row,Col,Tabs,Tab, Pagination} from \"react-bootstrap\";\nimport {AWSState,AWSContext} from \"./context/aws-context\";\nimport {AWSProfileSelect} from \"./components/aws/profile-select\"\nimport {LoadAWSProfiles} from \"./components/aws/AWSConfigFileDrop\";\nimport {LogGroupSelect} from \"./components/log-group/log-group-select\";\nimport {RegexFilterInput} from \"./components/filter-input/filter-input\"\nimport {LogEvents} from \"./components/log-events/log-events\";\nimport {FileInput} from \"./components/file/file-input\"; \nimport {Filter} from \"./components/filter-input/filter\";\nimport {Paging} from \"./components/page/pagination\";\n\nimport './App.css';\n\nexport class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {selectedTab:\"file\"};\n  }\n\n  tabSelect(keyEvent){\n    this.setState({selectedTab:keyEvent})\n  }\n\n  render(){\n    return  (\n      <GlobalState>\n        <AWSState>\n          <div className=\"content-holder\">\n            <header>\n                <Tabs onSelect={this.tabSelect.bind(this)}>\n                  <Tab eventKey=\"file\" title=\"File\">\n                    <Row><Col md={12}><FileInput></FileInput></Col></Row>\n                  </Tab>\n                  <Tab eventKey=\"aws\" title=\"AWS\">\n                    <AWSContext.Consumer>\n                      { \n                        ctx => ( \n                          (\n                            ctx.profilesLoaded && (\n                              <>\n                                <Row><Col md={6}><AWSProfileSelect></AWSProfileSelect></Col></Row>\n                                <Row><Col md={6}><LogGroupSelect test=\"test\" profile={ctx.selectedProfile}></LogGroupSelect></Col></Row>\n                              </>\n                            )  \n                          ) || (\n                            <Row className=\"p-4\" ><Col md={6}><LoadAWSProfiles></LoadAWSProfiles></Col></Row>\n                          ) \n                        ) \n                      }\n                    </AWSContext.Consumer>\n\n                  </Tab>\n                </Tabs>\n              <Row><Col md={12}><RegexFilterInput></RegexFilterInput></Col></Row>\n              <Paging></Paging>\n            </header>\n            <div className=\"content\">\n              {\n                this.state.selectedTab === \"file\" && \n                (\n                  <GlobalContext.Consumer>\n                    {gCtx => ( <Filter></Filter>)}\n                  </GlobalContext.Consumer>\n                )\n              }\n              { this.state.selectedTab === \"aws\" && \n                (\n                  <AWSContext.Consumer>\n                    {\n                      aCtx =>( \n                        aCtx.profilesLoaded && aCtx.selectedProfile && \n                        (\n                          <GlobalContext.Consumer>\n                            {gCtx => ( gCtx.selectedGroup && gCtx.selectedGroup.logGroupName && (<LogEvents profile={aCtx.selectedProfile} logGroup={gCtx.selectedGroup.logGroupName}></LogEvents> ))}\n                          </GlobalContext.Consumer>\n                        ) \n                      )\n                    }\n                  </AWSContext.Consumer>\n                )\n              }\n              \n              \n            </div>\n            <footer ></footer>\n          </div>\n        </AWSState>\n      </GlobalState>\n      )\n  }\n  \n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}