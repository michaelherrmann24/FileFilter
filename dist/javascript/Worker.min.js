!function(){"use strict";angular.module(APP.MODULE.FILE,[])}(),function(){"use strict";angular.module(APP.MODULE.FILTER,[])}(),function(){"use strict";angular.module(APP.MODULE.WORKER,[])}(),function(){"use strict";function a(a,b,c){function d(a,b,d){this.start=a,this.end=b,this.file=d,this.firstLine,this.lastLine,this.lines=[],this.reader=new c(d),this.deferred,this.index}return d.prototype.serialize=function(){return{executable:"ChunkMapper",parameters:[this.start,this.end,this.file],properties:{index:this.index,firstLine:this.firstLine,lastLine:this.lastLine,lines:this.lines}}},d.prototype.execute=function(){return this.deferred=a.defer(),this.reader.readBytes(this.start,this.end).then(this.mapChunk.bind(this)),this.deferred.promise},d.prototype.cancel=function(){this.deferred.reject("CANCELLED")},d.prototype.mapChunk=function(a){for(var c=new Uint8Array(a),d=this.start,e=0;e<c.length;e++)if(10===c[e]){var f=this.start+e;if(this.firstLine){var g=new b(d,f,!0);this.lines.push(g)}else this.firstLine=new b(d,f,!0);d=f+1}d<this.start+c.length&&(this.lastLine=new b(d,this.start+c.length,!1)),this.deferred.resolve(this)},d}angular.module(APP.MODULE.FILE).factory("ChunkMapper",["$q","Line","fileReaderSrvc",a])}(),function(){"use strict";function a(){function a(a,b,c){this.row,this.start=a,this.end=b,this.hasLineFeed=c}return a}angular.module(APP.MODULE.FILE).factory("Line",[a])}(),function(){"use strict";function a(a){function b(a){this.file=a}function c(a,b){return function(){b.resolve(a.result)}}function d(a,b){return function(){b.reject(a.result)}}function e(a){var b=new FileReader;return b.onload=c(b,a),b.onerror=d(b,a),b}return b.prototype.readBytes=function(b,c){var d=a.defer(),f=e(d);return f.readAsArrayBuffer(this.file.slice(b,c)),d.promise},b.prototype.read=function(b,c){var d=a.defer(),f=e(d);return f.readAsText(this.file.slice(b,c)),d.promise},b}angular.module(APP.MODULE.FILE).factory("fileReaderSrvc",["$q",a])}(),function(){"use strict";function a(a,b){function c(a,b,c,d){this.start=a,this.end=b,this.file=c,this.filterValue=d,this.result=[],this.deferred,this.index}return c.prototype.serialize=function(){return delete this.deferred,{executable:"FilterChunkProcessor",parameters:[this.start,this.end,this.file,this.filterValue],properties:{index:this.index,result:this.result}}},c.prototype.execute=function(){this.deferred=a.defer();var c=new b(this.file);return c.read(this.start,this.end).then(this.mapChunk.bind(this)),this.deferred.promise},c.prototype.cancel=function(){this.deferred.reject("CANCELLED")},c.prototype.mapChunk=function(a){this.result=a.split(/\r\n|\n/).map(this.isVisible.bind(this)),this.deferred.resolve(this)},c.prototype.isVisible=function(a){return-1!==a.search(this.filterValue)},c}angular.module(APP.MODULE.FILTER).factory("FilterChunkProcessor",["$q","fileReaderSrvc",a])}(),function(){"use strict";function a(a,b,c){function d(a){postMessage({event:"success",data:a.serialize()})}function e(a){postMessage({event:"error",data:a})}function f(a){postMessage({event:"notify",data:a})}function g(b){function g(a){m.resolve(a)}function h(a){m.reject(a)}function i(a){m.notify(a)}var j,k,l=b.data,m=a.defer(),n=m.promise;if(n.then(d,e,f),c.has(l.executable)){j=c.get(l.executable),k=Object.create(j.prototype),j.apply(k,l.parameters);for(var o in l.properties)k[o]=l.properties[o];"function"==typeof k.execute?k.execute().then(g,h,i):m.reject("executable does not contain an execute function")}else m.reject("Executable not Injectable")}onmessage=g,postMessage({event:"initDone"})}angular.module(APP.MODULE.WORKER).run(["$q","$window","$injector",a])}();
//# sourceMappingURL=Worker.min.js.map